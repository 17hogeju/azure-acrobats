{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/user.js","actions/types.js","reducers/index.js","store.js","http-common.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/user.service.js","components/home.component.js","components/profile.component.js","actions/user.js","common/EventBus.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","helpers/history.js","App.js","actions/message.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","userReducer","users","action","type","payload","filter","id","combineReducers","auth","state","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","axios","create","baseURL","headers","API_URL","username","password","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","error","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","http","get","delete","Profile","getUser","getThisUser","removeUser","currentUser","UserService","console","log","deleteUser","logout","undefined","forceUpdate","onClick","a","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","createBrowserHistory","App","logOut","showModeratorBoard","showAdminBoard","listen","getCurrentUser","EventBus","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.72cfe5cb.chunk.js","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/types\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    RETRIEVE_USER,\r\n    DELETE_USER\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = [];\r\n  \r\n  function userReducer(users = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n  \r\n      case RETRIEVE_USER:\r\n        return payload;\r\n  \r\n      case DELETE_USER:\r\n        return users.filter(({ id }) => id !== payload.id);\r\n  \r\n      default:\r\n        return users;\r\n    }\r\n  };\r\n  \r\n  export default userReducer;","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const RETRIEVE_USER = \"RETRIEVE_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  user\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import axios from \"axios\";\r\nimport http from \"../http-common\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/home\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3 d-flex\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n              <div className=\"ml-3\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                    No account? Sign Up\r\n                  </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n    return AuthService.register(username, email, password).then(\r\n        (response) => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: response.data.message,\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n    return AuthService.login(username, password).then(\r\n        (data) => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: { user: data },\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mt-3 d-flex\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                  <div className=\"ml-3\">\r\n                    <Link to={\"/login\"} className=\"nav-link\">\r\n                      Have an account? Sign in\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                  {message}\r\n                </div>\r\n                <div className=\"form-group mt-3 d-flex\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                      Log in\r\n                    </Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","\r\nimport http from '../http-common';\r\n\r\nconst API_URL = 'http://localhost:8080/api/user/';\r\n\r\nclass UserService {\r\n\r\n  getUser(id){\r\n    return http.get(API_URL + id);\r\n  }\r\n\r\n  deleteUser(id){\r\n    return http.delete(API_URL + id);\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container m-auto\">\r\n        <header className=\"jumbotron\">\r\n          <h3>Welcome to the AzureAcrobats Project</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport UserService from \"../services/user.service\";\r\nimport { deleteUser } from \"../actions/user\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getUser = this.getThisUser.bind(this);\r\n    this.removeUser = this.removeUser.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: {\r\n        id: null,\r\n        username: \"\",\r\n        email: \"\",\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n\r\n\r\n  getThisUser(id) {\r\n    UserService.getUser(id).then((response) => {\r\n      this.setState({\r\n        currentUser: response.data,\r\n      });\r\n      console.log(response.data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  removeUser(id) {\r\n    this.props.deleteUser(id).then(() => {\r\n      this.props.history.push(\"/\");\r\n      AuthService.logout();\r\n      this.state.currentUser = undefined;\r\n      window.location.reload();\r\n      this.forceUpdate();\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { user: currentUser } = this.props;\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            Welcome home, <strong>{currentUser.username}</strong>!\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong> {currentUser.accessToken}\r\n        </p>\r\n        <p>\r\n          The email you have registered with is: <strong>{currentUser.email}</strong>\r\n        </p>\r\n        <p>\r\n          If this is not correct, you can delete your account and create a new one:\r\n        </p>\r\n        <button className=\"btn btn-danger btn-block\" onClick={() => {this.removeUser(currentUser.id)}}>Delete Account</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  const {user} = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteUser})(Profile);","import {\r\n    RETRIEVE_USER,\r\n    DELETE_USER,\r\n  } from \"./types\";\r\n  \r\n  import UserService from \"../services/user.service\";\r\n  \r\n  \r\n  export const retrieveUser = (id) => async (dispatch) => {\r\n    try {\r\n      const res = await UserService.getUser(id);\r\n  \r\n      dispatch({\r\n        type: RETRIEVE_USER,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n      await UserService.deleteUser(id);\r\n  \r\n      dispatch({\r\n        type: DELETE_USER,\r\n        payload: { id },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };","const eventBus = {\r\n    on(event, callback) {\r\n      document.addEventListener(event, (e) => callback(e.detail));\r\n    },\r\n    dispatch(event, data) {\r\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n    },\r\n    remove(event, callback) {\r\n      document.removeEventListener(event, callback);\r\n    },\r\n  };\r\n  \r\n  export default eventBus;","import React, { Component } from \"react\";\r\n\r\nimport EventBus from \"../common/EventBus\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getUserBoard().then(\r\n            response => {\r\n                this.setState({\r\n                    content: response.data\r\n                });\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    content:\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString()\r\n                });\r\n\r\n                if (error.response && error.response.status === 401) {\r\n                    EventBus.dispatch(\"logout\");\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.content}</h3>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport EventBus from \"../common/EventBus\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport EventBus from \"../common/EventBus\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardModerator from \"./components/board-moderator.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport EventBus from \"./common/EventBus\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from './helpers/history';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n\r\n    history.listen((location) => {\r\n      props.dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n    \r\n    EventBus.on(\"logout\", () => {\r\n      this.logOut();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventBus.remove(\"logout\");\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand myTestClass\">\r\n              AzureAcrobats\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/home\"} className=\"nav-link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    Log Out\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                \r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={\"/\"} component={Login} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/home\" component={Profile} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nimport App from \"./App\";\r\n\r\n\r\nwindow.addEventListener(\"load\", () =>\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n);\r\n"],"sourceRoot":""}