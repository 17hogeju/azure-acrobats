{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/user.js","actions/types.js","reducers/household.js","reducers/index.js","store.js","http-common.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/user.service.js","components/profile.component.js","actions/user.js","components/example-scatter.component.js","components/dashboard.component.js","common/EventBus.js","helpers/history.js","services/household.service.js","components/households.component.js","actions/households.js","App.js","actions/message.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","userReducer","users","action","type","payload","filter","id","items","loading","error","householdReducer","state","console","log","combineReducers","auth","message","household","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","axios","create","baseURL","headers","API_URL","username","password","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","http","get","delete","Profile","getUser","getThisUser","removeUser","currentUser","UserService","deleteUser","logout","undefined","forceUpdate","onClick","confirm","a","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","ExampleScatter","options","scales","y","title","text","fontSize","legend","position","Dashboard","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","createBrowserHistory","Household","HouseholdService","getAllHouseholds","retrieveHouseholdsFail","households","map","house","hshd_num","App","logOut","listen","getCurrentUser","EventBus","exact","path","component","Households","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d30f27b4.chunk.js","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/types\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    RETRIEVE_USER,\r\n    DELETE_USER\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = [];\r\n  \r\n  function userReducer(users = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n  \r\n      case RETRIEVE_USER:\r\n        return payload;\r\n  \r\n      case DELETE_USER:\r\n        return users.filter(({ id }) => id !== payload.id);\r\n  \r\n      default:\r\n        return users;\r\n    }\r\n  };\r\n  \r\n  export default userReducer;","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const RETRIEVE_USER = \"RETRIEVE_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\n\r\nexport const RETRIEVE_HOUSEHOLDS_SUCCESS = \"RETRIEVE_HOUSEHOLDS_SUCCESS\";\r\nexport const RETRIEVE_HOUSEHOLDS_FAIL = \"RETRIEVE_HOUSEHOLDS_FAIL\";\r\nexport const RETRIEVE_HOUSEHOLDS_BEGIN = \"RETRIEVE_HOUSEHOLDS_BEGIN\";\r\n\r\nexport const RETRIEVE_TRANSACTIONS = \"RETRIEVE_TRANSACTIONS\";\r\n\r\nexport const RETRIEVE_PRODUCTS = \"RETRIEVE_PRODUCTS\";\r\n\r\n","import {\r\n    RETRIEVE_HOUSEHOLDS_SUCCESS, RETRIEVE_HOUSEHOLDS_FAIL, RETRIEVE_HOUSEHOLDS_BEGIN\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\nfunction householdReducer(state = initialState, action) {\r\n\r\nswitch (action.type) {\r\n    case RETRIEVE_HOUSEHOLDS_BEGIN:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n\r\n    case RETRIEVE_HOUSEHOLDS_SUCCESS:\r\n        console.log(action.payload);\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            loading: false,\r\n            error: null,\r\n        };\r\n    case RETRIEVE_HOUSEHOLDS_FAIL:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: false,\r\n            error: action.payload,\r\n        }\r\n\r\n    default:\r\n        return state;\r\n  };\r\n}\r\nexport default householdReducer;","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport user from \"./user\";\r\nimport household from \"./household\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  user,\r\n  household\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import axios from \"axios\";\r\nimport http from \"../http-common\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3 d-flex\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n              <div className=\"ml-3\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                    No account? Sign Up\r\n                  </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n    return AuthService.register(username, email, password).then(\r\n        (response) => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: response.data.message,\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n    return AuthService.login(username, password).then(\r\n        (data) => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: { user: data },\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mt-3 d-flex\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                  <div className=\"ml-3\">\r\n                    <Link to={\"/login\"} className=\"nav-link\">\r\n                      Have an account? Sign in\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                  {message}\r\n                </div>\r\n                <div className=\"form-group mt-3 d-flex\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                      Log in\r\n                    </Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","\r\nimport http from '../http-common';\r\n\r\nconst API_URL = 'http://localhost:8080/api/user/';\r\n\r\nclass UserService {\r\n\r\n  getUser(id){\r\n    return http.get(API_URL + id);\r\n  }\r\n\r\n  deleteUser(id){\r\n    return http.delete(API_URL + id);\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport UserService from \"../services/user.service\";\r\nimport { deleteUser } from \"../actions/user\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getUser = this.getThisUser.bind(this);\r\n    this.removeUser = this.removeUser.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: {\r\n        id: null,\r\n        username: \"\",\r\n        email: \"\",\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n\r\n\r\n  getThisUser(id) {\r\n    UserService.getUser(id).then((response) => {\r\n      this.setState({\r\n        currentUser: response.data,\r\n      });\r\n      console.log(response.data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  removeUser(id) {\r\n    this.props.deleteUser(id).then(() => {\r\n      this.props.history.push(\"/\");\r\n      AuthService.logout();\r\n      this.state.currentUser = undefined;\r\n      window.location.reload();\r\n      this.forceUpdate();\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { user: currentUser } = this.props;\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            Welcome home, <strong>{currentUser.username}</strong>!\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          The email you have registered with is: <strong>{currentUser.email}</strong>\r\n        </p>\r\n        <p>\r\n          If this is not correct, you can delete your account and create a new one:\r\n        </p>\r\n        <button className=\"btn btn-danger btn-block\" onClick={() => {if(window.confirm('Delete account?')){this.removeUser(currentUser.id)}}}>Delete Account</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  const {user} = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteUser})(Profile);","import {\r\n    RETRIEVE_USER,\r\n    DELETE_USER,\r\n  } from \"./types\";\r\n  \r\n  import UserService from \"../services/user.service\";\r\n  \r\n  \r\n  export const retrieveUser = (id) => async (dispatch) => {\r\n    try {\r\n      const res = await UserService.getUser(id);\r\n  \r\n      dispatch({\r\n        type: RETRIEVE_USER,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n      await UserService.deleteUser(id);\r\n  \r\n      dispatch({\r\n        type: DELETE_USER,\r\n        payload: { id },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };","import React, { Component } from \"react\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\n\r\nconst state = {\r\n    labels: ['January', 'February', 'March',\r\n             'April', 'May'],\r\n    datasets: [\r\n      {\r\n        label: 'Rainfall',\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: 'rgba(75,192,192,1)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderWidth: 2,\r\n        data: [65, 59, 80, 81, 56]\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\nclass ExampleScatter extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Line data={state} options={{\r\n                    scales: {\r\n                        y: {\r\n                            title:{\r\n                                display:true,\r\n                                text: 'Average Rainfall per month',\r\n                                fontSize: 20,\r\n                            },\r\n                            legend:{\r\n                                display: true,\r\n                                position: 'start'\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExampleScatter;","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport ExampleScatter from \"./example-scatter.component\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: {\r\n                id: null,\r\n                username: \"\",\r\n                email: \"\",\r\n            },\r\n            message: \"\",\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { user: currentUser } = this.props;\r\n        if (!currentUser) {\r\n            console.log(\"nope\");\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>\r\n                        <strong>Dashboard</strong>\r\n                    </h3>\r\n                </header>\r\n                <ExampleScatter />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { user } = state.auth;\r\n    return {\r\n        user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","const eventBus = {\r\n    on(event, callback) {\r\n      document.addEventListener(event, (e) => callback(e.detail));\r\n    },\r\n    dispatch(event, data) {\r\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n    },\r\n    remove(event, callback) {\r\n      document.removeEventListener(event, callback);\r\n    },\r\n  };\r\n  \r\n  export default eventBus;","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","\r\nimport http from '../http-common';\r\n\r\nconst API_URL = 'http://localhost:8080/api/households/';\r\n\r\nclass HouseholdService {\r\n\r\n  getAllHouseholds(){\r\n    return http.get(API_URL);\r\n  }\r\n\r\n}\r\n\r\nexport default new HouseholdService();","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchHouseholds } from \"../actions/households\";\r\n\r\n\r\nclass Household extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchHouseholds());\r\n    }\r\n\r\n\r\n    // refreshData() {\r\n    //     this.setState({\r\n    //         currentHousehold: null,\r\n    //         currentIndex: -1,\r\n    //     });\r\n    // }\r\n\r\n    // setActiveHousehold(household, index) {\r\n    //     this.setState({\r\n    //         currentHousehold: household,\r\n    //         currentIndex: index,\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        let error = this.props.households.error;\r\n        let loading = this.props.households.loading;\r\n        let households = this.props.households.items;\r\n        if (loading) {\r\n            return <div className=\"spinner-border\" role=\"status\"></div>;\r\n        }\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        } \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-6\">\r\n                        <h4>Households List</h4>\r\n\r\n                        <ul className=\"list-group\">\r\n                            {\r\n                              households.data.map(house => (\r\n                                  <li>{house.hshd_num}</li>\r\n                              ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    households: state ? state.household : [],\r\n    loading: state ? state.loading : true,\r\n    error: state ? state.error: null\r\n});\r\n\r\nexport default connect(mapStateToProps)(Household);","import HouseholdService from \"../services/household.service\";\r\nimport http from '../http-common';\r\nimport axios from \"axios\";\r\n\r\n\r\nimport {\r\n    RETRIEVE_HOUSEHOLDS_BEGIN, RETRIEVE_HOUSEHOLDS_SUCCESS, RETRIEVE_HOUSEHOLDS_FAIL\r\n} from \"./types\";\r\n\r\nconst API_URL = 'http://localhost:8080/api/households/';\r\n\r\nexport const retrieveHouseholdsBegin = () => ({\r\n    type: RETRIEVE_HOUSEHOLDS_BEGIN,\r\n});\r\n\r\nexport const retrieveHouseholdsSuccess = households => ({\r\n    type: RETRIEVE_HOUSEHOLDS_SUCCESS,\r\n    payload: households\r\n});\r\n\r\nexport const retrieveHouseholdsFail = error => ({\r\n    type: RETRIEVE_HOUSEHOLDS_FAIL,\r\n    payload: error \r\n});\r\n\r\n\r\n\r\n// export function fetchHouseholds(){\r\n//     return function(dispatch) {\r\n//         dispatch(retrieveHouseholdsBegin());\r\n//         return axios.get(API_URL).then(({ data }) => {\r\n//             console.log(data);\r\n//             dispatch(retrieveHouseholdsSuccess(data));\r\n//         }).error((error) => {\r\n//             dispatch(retrieveHouseholdsFail(error));\r\n//         })\r\n//     };\r\n// }\r\n\r\n\r\nexport const fetchHouseholds = () => (dispatch) => {\r\n    dispatch(retrieveHouseholdsBegin());\r\n    return HouseholdService.getAllHouseholds().then(\r\n        (data) => {\r\n            dispatch(retrieveHouseholdsSuccess(data));\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            dispatch(retrieveHouseholdsFail(error));\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport Dashboard from \"./components/dashboard.component\";\r\nimport EventBus from \"./common/EventBus\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from './helpers/history';\r\nimport Households from \"./components/households.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: undefined,\r\n    };\r\n\r\n    history.listen((location) => {\r\n      props.dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n    \r\n    EventBus.on(\"logout\", () => {\r\n      this.logOut();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventBus.remove(\"logout\");\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand myTestClass\">\r\n              AzureAcrobats\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    Account\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/dashboard\"} className=\"nav-link\">\r\n                    Dashboard\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/households\"} className=\"nav-link\">\r\n                    Households\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    Log Out\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                \r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={\"/\", \"/login\"} component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/households\" component={Households} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  const { household } = state.household;\r\n  return {\r\n    user,\r\n    household,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nimport App from \"./App\";\r\n\r\n\r\nwindow.addEventListener(\"load\", () =>\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n);\r\n"],"sourceRoot":""}