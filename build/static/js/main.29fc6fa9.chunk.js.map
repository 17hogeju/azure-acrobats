{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/user.js","actions/types.js","reducers/household.js","reducers/transaction.js","reducers/category.js","reducers/index.js","store.js","http-common.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/user.service.js","components/profile.component.js","actions/user.js","components/import-data.component.js","common/EventBus.js","services/transaction.service.js","actions/transactions.js","components/line-graph.component.js","components/onea.component.js","helpers/history.js","services/category.service.js","actions/categories.js","components/oneb.component.js","App.js","actions/message.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","userReducer","users","action","type","payload","filter","id","items","loading","error","householdReducer","state","console","log","transactionReducer","categoryReducer","combineReducers","auth","message","household","transaction","category","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","axios","create","baseURL","headers","API_URL","username","password","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","http","get","delete","Profile","getUser","getThisUser","removeUser","currentUser","UserService","deleteUser","logout","undefined","forceUpdate","onClick","confirm","a","mylabel","ImportData","handleOnDrop","checkboxes","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","Array","fill","map","_","i","changedIndex","checked","onDrop","onError","addRemoveButton","onRemoveFile","item","key","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","fetchTransactions","retrieveTransactionsBegin","TransactionService","getAllTransactions","retrieveTransactionsSuccess","retrieveTransactionsFail","transactions","LineGraph","height","width","labels","datasets","label","lineTension","backgroundColor","borderColor","borderWidth","options","plugins","legend","title","text","font","size","scales","y","yaxis","x","xaxis","OneA","obj","property","array","terror","tloading","getById","createBrowserHistory","retrieveCategoriesBegin","retrieveCategoriesSuccess","categories","retrieveCategoriesFail","OneB","j","validMonths","String","startsWith","CategoryService","getAllCategories","cerror","cloading","App","logOut","listen","getCurrentUser","EventBus","exact","path","component","Transactions","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29fc6fa9.chunk.js","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/types\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    RETRIEVE_USER,\r\n    DELETE_USER\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = [];\r\n  \r\n  function userReducer(users = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n  \r\n      case RETRIEVE_USER:\r\n        return payload;\r\n  \r\n      case DELETE_USER:\r\n        return users.filter(({ id }) => id !== payload.id);\r\n  \r\n      default:\r\n        return users;\r\n    }\r\n  };\r\n  \r\n  export default userReducer;","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const RETRIEVE_USER = \"RETRIEVE_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\n\r\nexport const RETRIEVE_HOUSEHOLDS_SUCCESS = \"RETRIEVE_HOUSEHOLDS_SUCCESS\";\r\nexport const RETRIEVE_HOUSEHOLDS_FAIL = \"RETRIEVE_HOUSEHOLDS_FAIL\";\r\nexport const RETRIEVE_HOUSEHOLDS_BEGIN = \"RETRIEVE_HOUSEHOLDS_BEGIN\";\r\n\r\nexport const RETRIEVE_TRANSACTIONS_SUCCESS = \"RETRIEVE_TRANSACTIONS_SUCCESS\";\r\nexport const RETRIEVE_TRANSACTIONS_FAIL = \"RETRIEVE_TRANSACTIONS_FAIL\";\r\nexport const RETRIEVE_TRANSACTIONS_BEGIN = \"RETRIEVE_TRANSACTIONS_BEGIN\";\r\n\r\nexport const RETRIEVE_CATEGORIES_SUCCESS = \"RETRIEVE_CATEGORIES_SUCCESS\";\r\nexport const RETRIEVE_CATEGORIES_FAIL = \"RETRIEVE_CATEGORIES_FAIL\";\r\nexport const RETRIEVE_CATEGORIES_BEGIN = \"RETRIEVE_CATEGORIES_BEGIN\";\r\n\r\n","import {\r\n    RETRIEVE_HOUSEHOLDS_SUCCESS, RETRIEVE_HOUSEHOLDS_FAIL, RETRIEVE_HOUSEHOLDS_BEGIN\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\nfunction householdReducer(state = initialState, action) {\r\n\r\nswitch (action.type) {\r\n    case RETRIEVE_HOUSEHOLDS_BEGIN:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n\r\n    case RETRIEVE_HOUSEHOLDS_SUCCESS:\r\n        console.log(action.payload);\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            loading: false,\r\n            error: null,\r\n        };\r\n    case RETRIEVE_HOUSEHOLDS_FAIL:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: false,\r\n            error: action.payload,\r\n        }\r\n\r\n    default:\r\n        return state;\r\n  };\r\n}\r\nexport default householdReducer;","import {\r\n    RETRIEVE_TRANSACTIONS_SUCCESS, RETRIEVE_TRANSACTIONS_FAIL, RETRIEVE_TRANSACTIONS_BEGIN\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\nfunction transactionReducer(state = initialState, action) {\r\n\r\nswitch (action.type) {\r\n    case RETRIEVE_TRANSACTIONS_BEGIN:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n\r\n    case RETRIEVE_TRANSACTIONS_SUCCESS:\r\n        console.log(action.payload);\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            loading: false,\r\n            error: null,\r\n        };\r\n    case RETRIEVE_TRANSACTIONS_FAIL:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: false,\r\n            error: action.payload,\r\n        }\r\n\r\n    default:\r\n        return state;\r\n  };\r\n}\r\nexport default transactionReducer;","import {\r\n    RETRIEVE_CATEGORIES_SUCCESS, RETRIEVE_CATEGORIES_FAIL, RETRIEVE_CATEGORIES_BEGIN\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\nfunction categoryReducer(state = initialState, action) {\r\n\r\nswitch (action.type) {\r\n    case RETRIEVE_CATEGORIES_BEGIN:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n\r\n    case RETRIEVE_CATEGORIES_SUCCESS:\r\n        console.log(action.payload);\r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            loading: false,\r\n            error: null,\r\n        };\r\n    case RETRIEVE_CATEGORIES_FAIL:\r\n        return {\r\n            ...state,\r\n            items: [],\r\n            loading: false,\r\n            error: action.payload,\r\n        }\r\n\r\n    default:\r\n        return state;\r\n  };\r\n}\r\nexport default categoryReducer;","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport user from \"./user\";\r\nimport household from \"./household\";\r\nimport transaction from \"./transaction\";\r\nimport category from \"./category\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  user,\r\n  household, \r\n  transaction,\r\n  category\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import axios from \"axios\";\r\nimport http from \"../http-common\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3 d-flex\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n              <div className=\"ml-3\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                    No account? Sign Up\r\n                  </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n    return AuthService.register(username, email, password).then(\r\n        (response) => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: response.data.message,\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n    return AuthService.login(username, password).then(\r\n        (data) => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: { user: data },\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group mt-3 d-flex\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                  <div className=\"ml-3\">\r\n                    <Link to={\"/login\"} className=\"nav-link\">\r\n                      Have an account? Sign in\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                  {message}\r\n                </div>\r\n                <div className=\"form-group mt-3 d-flex\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                      Log in\r\n                    </Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","\r\nimport http from '../http-common';\r\n\r\nconst API_URL = 'http://localhost:8080/api/user/';\r\n\r\nclass UserService {\r\n\r\n  getUser(id){\r\n    return http.get(API_URL + id);\r\n  }\r\n\r\n  deleteUser(id){\r\n    return http.delete(API_URL + id);\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport UserService from \"../services/user.service\";\r\nimport { deleteUser } from \"../actions/user\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getUser = this.getThisUser.bind(this);\r\n    this.removeUser = this.removeUser.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: {\r\n        id: null,\r\n        username: \"\",\r\n        email: \"\",\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n\r\n\r\n  getThisUser(id) {\r\n    UserService.getUser(id).then((response) => {\r\n      this.setState({\r\n        currentUser: response.data,\r\n      });\r\n      console.log(response.data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  removeUser(id) {\r\n    this.props.deleteUser(id).then(() => {\r\n      this.props.history.push(\"/\");\r\n      AuthService.logout();\r\n      this.state.currentUser = undefined;\r\n      window.location.reload();\r\n      this.forceUpdate();\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { user: currentUser } = this.props;\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            Welcome home, <strong>{currentUser.username}</strong>!\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          The email you have registered with is: <strong>{currentUser.email}</strong>\r\n        </p>\r\n        <p>\r\n          If this is not correct, you can delete your account and create a new one:\r\n        </p>\r\n        <button className=\"btn btn-danger btn-block\" onClick={() => {if(window.confirm('Delete account?')){this.removeUser(currentUser.id)}}}>Delete Account</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  const {user} = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteUser})(Profile);","import {\r\n    RETRIEVE_USER,\r\n    DELETE_USER,\r\n  } from \"./types\";\r\n  \r\n  import UserService from \"../services/user.service\";\r\n  \r\n  \r\n  export const retrieveUser = (id) => async (dispatch) => {\r\n    try {\r\n      const res = await UserService.getUser(id);\r\n  \r\n      dispatch({\r\n        type: RETRIEVE_USER,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  export const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n      await UserService.deleteUser(id);\r\n  \r\n      dispatch({\r\n        type: DELETE_USER,\r\n        payload: { id },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVReader } from 'react-papaparse';\r\n\r\n\r\nconst n = 3;\r\nconst mylabel = [\"households\", \"products\", \"transactions\"];\r\n\r\n\r\n\r\nclass ImportData extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            checkboxes: new Array(n).fill().map((_, i) => !i),\r\n        };\r\n    }\r\n\r\n    onChange(e, changedIndex) {\r\n        // it is a good habit to extract things from event variable\r\n        const { checked } = e.target;\r\n\r\n        this.setState(state => ({\r\n            // this lets you unselect all.\r\n            // but selected can be anly one at a time\r\n            checkboxes: state.checkboxes.map((_, i) => i === changedIndex ? checked : false),\r\n        }));\r\n    }\r\n\r\n    handleOnDrop = (data) => {\r\n        console.log('---------------------------');\r\n        console.log(data);\r\n        console.log(this.state.checkboxes);\r\n        console.log('---------------------------');\r\n    };\r\n\r\n    handleOnError = (err, file, inputElem, reason) => {\r\n        console.log(err);\r\n    };\r\n\r\n    handleOnRemoveFile = (data) => {\r\n        console.log('---------------------------');\r\n        console.log(data);\r\n        console.log('---------------------------');\r\n    };\r\n\r\n\r\n    render() {\r\n        const { checkboxes } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <h2>Import New Data</h2>\r\n                    <p>Please input one file at a time and select destination</p>\r\n                    <CSVReader\r\n                        onDrop={this.handleOnDrop}\r\n                        onError={this.handleOnError}\r\n                        addRemoveButton\r\n                        onRemoveFile={this.handleOnRemoveFile}>\r\n                        <span>Drop CSV file here or click to upload.</span>\r\n                    </CSVReader>\r\n                    <div className=\"d-flex flex-column align-items start\">\r\n                    {checkboxes.map((item, i) => (\r\n                        <label>\r\n                            <input\r\n                                key={i}\r\n                                type=\"checkbox\"\r\n                                checked={item}\r\n                                onChange={e => this.onChange(e, i) /* notice passing an index. we will use it */}\r\n                            />  {mylabel[i]}</label>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(ImportData);","const eventBus = {\r\n    on(event, callback) {\r\n      document.addEventListener(event, (e) => callback(e.detail));\r\n    },\r\n    dispatch(event, data) {\r\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n    },\r\n    remove(event, callback) {\r\n      document.removeEventListener(event, callback);\r\n    },\r\n  };\r\n  \r\n  export default eventBus;","\r\nimport http from '../http-common';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\n\r\nclass TransactionService {\r\n\r\n  getAllTransactions(){\r\n    return http.get(API_URL + 'transactions');\r\n  }\r\n\r\n}\r\n\r\nexport default new TransactionService();","import TransactionService from \"../services/transaction.service\";\r\n\r\nimport {\r\n    RETRIEVE_TRANSACTIONS_BEGIN, \r\n    RETRIEVE_TRANSACTIONS_SUCCESS, \r\n    RETRIEVE_TRANSACTIONS_FAIL\r\n} from \"./types\";\r\n\r\nexport const fetchTransactions = () => (dispatch) => {\r\n    dispatch(retrieveTransactionsBegin());\r\n    return TransactionService.getAllTransactions().then(\r\n        (data) => {\r\n            dispatch(retrieveTransactionsSuccess(data));\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            dispatch(retrieveTransactionsFail(error));\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const retrieveTransactionsBegin = () => ({\r\n    type: RETRIEVE_TRANSACTIONS_BEGIN,\r\n});\r\n\r\nexport const retrieveTransactionsSuccess = transactions => ({\r\n    type: RETRIEVE_TRANSACTIONS_SUCCESS,\r\n    payload: transactions\r\n});\r\n\r\nexport const retrieveTransactionsFail = error => ({\r\n    type: RETRIEVE_TRANSACTIONS_FAIL,\r\n    payload: error \r\n});","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nclass LineGraph extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Line\r\n                    height={600} width={1000}\r\n                    data={\r\n                        {\r\n                            labels: this.props.labels,\r\n                            datasets: [\r\n                                {\r\n                                    label: false,\r\n                                    fill: false,\r\n                                    lineTension: 0.5,\r\n                                    backgroundColor: 'rgba(75,192,192,1)',\r\n                                    borderColor: 'rgba(0,0,0,1)',\r\n                                    borderWidth: 2,\r\n                                    data: this.props.data\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                    options={{\r\n                        plugins: {\r\n                            legend: {\r\n                                display: false,\r\n                            },\r\n                            title: {\r\n                                display: true,\r\n                                text: this.props.title,\r\n                                font: {\r\n                                    size: 30,\r\n                                }\r\n                            }\r\n                        },\r\n\r\n                        scales: {\r\n                            y: {\r\n                                title: {\r\n                                    display: true,\r\n                                    text: this.props.yaxis,\r\n                                    font: {\r\n                                        size: 25,\r\n                                    }\r\n                                }\r\n                            },\r\n                            x: {\r\n                                title: {\r\n                                    display: true,\r\n                                    text: this.props.xaxis,\r\n                                    font: {\r\n                                        size: 25,\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LineGraph;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTransactions } from \"../actions/transactions\";\r\nimport LineGraph from \"./line-graph.component\";\r\n\r\nclass OneA extends Component {\r\n\r\n\r\n    getById(obj, property){\r\n        let i;\r\n        let array = [];\r\n        for(i = 0; i < obj.length; i++){\r\n            array.push(obj[i][property]);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchTransactions());\r\n    }\r\n\r\n    render() {\r\n        let terror = this.props.terror;\r\n        let tloading = this.props.tloading;\r\n        let transactions = this.props.transactions;\r\n        if (tloading) {\r\n            return [\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <div className=\"spinner-border\" role=\"status\"></div>\r\n                    </div>\r\n                </div>\r\n            ]\r\n        }\r\n        if (terror) {\r\n            return [\r\n            <div className=\"container\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <div>Error! {terror.message}</div>\r\n                </div>\r\n            </div>\r\n            ]\r\n        } \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <h2>Household Spending Over Time</h2>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(transactions.data[0], \"sum\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Collective Sum of All Transactions\"/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    transactions: state.transaction.items,\r\n    tloading: state.transaction.loading,\r\n    terror: state.transaction.error,\r\n});\r\n\r\nexport default connect(mapStateToProps)(OneA);","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","\r\nimport http from '../http-common';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\n\r\nclass CategoryService {\r\n\r\n  getAllCategories(){\r\n    return http.get(API_URL + 'categories');\r\n  }\r\n\r\n}\r\n\r\nexport default new CategoryService();","import CategoryService from \"../services/category.service\";\r\n\r\nimport {\r\n    RETRIEVE_CATEGORIES_BEGIN, \r\n    RETRIEVE_CATEGORIES_SUCCESS, \r\n    RETRIEVE_CATEGORIES_FAIL\r\n} from \"./types\";\r\n\r\nexport const fetchCategories = () => (dispatch) => {\r\n    dispatch(retrieveCategoriesBegin());\r\n    return CategoryService.getAllCategories().then(\r\n        (data) => {\r\n            dispatch(retrieveCategoriesSuccess(data));\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            dispatch(retrieveCategoriesFail(error));\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const retrieveCategoriesBegin = () => ({\r\n    type: RETRIEVE_CATEGORIES_BEGIN,\r\n});\r\n\r\nexport const retrieveCategoriesSuccess = categories => ({\r\n    type: RETRIEVE_CATEGORIES_SUCCESS,\r\n    payload: categories\r\n});\r\n\r\nexport const retrieveCategoriesFail = error => ({\r\n    type: RETRIEVE_CATEGORIES_FAIL,\r\n    payload: error \r\n});","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTransactions } from \"../actions/transactions\";\r\nimport { fetchCategories } from \"../actions/categories\";\r\nimport LineGraph from \"./line-graph.component\";\r\n\r\nclass OneB extends Component {\r\n\r\n\r\n    getById(obj, property, name){\r\n        let i;\r\n        let j = 0;\r\n        let array = [];\r\n        let validMonths = [\"8\",\"9\",\"10\",\"11\",\"12\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\r\n        if(name){\r\n            for(i = 0; i < obj.length; i++){\r\n                if(String(obj[i][\"commodity\"]) == name){\r\n                    if(obj[i][\"month/year\"].startsWith(validMonths[j])){\r\n                        array.push(obj[i][property]);\r\n                    } else{\r\n                        array.push(0);\r\n                        array.push(obj[i][property]);\r\n\r\n                        j = j + 1;\r\n                    }\r\n                    j = j + 1;\r\n                }\r\n            }\r\n        } else {\r\n            for(i = 0; i < obj.length; i++){\r\n                array.push(obj[i][property]);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchTransactions());\r\n        this.props.dispatch(fetchCategories());\r\n    }\r\n\r\n    render() {\r\n        let terror = this.props.terror;\r\n        let tloading = this.props.tloading;\r\n        let transactions = this.props.transactions;\r\n        let cerror = this.props.cerror;\r\n        let cloading = this.props.cloading;\r\n        let categories = this.props.categories;\r\n        if (tloading || cloading) {\r\n            return [\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <div className=\"spinner-border\" role=\"status\"></div>\r\n                    </div>\r\n                </div>\r\n            ]\r\n        }\r\n        if (terror || cerror) {\r\n            if(terror && !cerror){\r\n                return [\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <div>Error! {terror.message}</div>\r\n                    </div>\r\n                </div>\r\n                ]\r\n            } else if(cerror && !terror){\r\n                return [\r\n                    <div className=\"container\">\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                            <div>Error! {cerror.message}</div>\r\n                        </div>\r\n                    </div>\r\n                    ]\r\n            } else {\r\n                return [\r\n                    <div className=\"container\">\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                            <div>Errors: {terror.message}, {cerror.message}</div>\r\n                        </div>\r\n                    </div>\r\n                    ]\r\n            }\r\n            \r\n        } \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <h2>Changing Customer Engagement By Category Over Time</h2>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"ACTIVITY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Activity Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"ALCOHOL\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Alcohol Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"AUTO\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Auto Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"BABY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Baby Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"BAKERY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Bakery Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"BEVERAGE - NON WATER\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Beverage - Non Water Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"BEVERAGE - WATER\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Beverage - Water Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"BULK PRODUCTS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Bulk Products Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"CANNED GOODS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Canned Goods Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"CLOTHING\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Clothing Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"COSMETICS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Cosmetics Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"DAIRY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Dairy Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"DELI\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Deli Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"DRY GOODS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Dry Goods Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"ELECTRONICS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Electronics Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"FLORAL\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Floral Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"FROZEN FOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Frozen Food Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"GIFT\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Gift Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"GROCERY STAPLE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Grocery Staple Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"HOLIDAY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Holiday Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"HOUSEHOLD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Household Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"IN STORE FOOD SERVICE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of In Store Food Service Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"INTERNATIONAL FOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of International Food Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - BEEF\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Beef Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - CHICKEN\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Chicken Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - OTHER\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Other Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - PORK\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Pork Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - POULTRY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat Poultry Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - SAUSAGE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat Sausage Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - TURKEY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat Turkey Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEDICAL SUPPLIES\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Medical Supplies Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MEDICATION\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Medication Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"MISC\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Miscellaneous Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"OUTDOOR\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Outdoor Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"PERSONAL CARE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Personal Care Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"PET\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Pet Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"PRODUCE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Produce Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"SEAFOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Seafood Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"SEASONAL PRODUCTS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Seasonal Products Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"SPECIALTY FOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Specialty Food Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"TOBACCO PRODUCTS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Tobacco Products Commodity\"/>\r\n                        <LineGraph labels={this.getById(transactions.data[0], \"year\")} data={this.getById(categories.data[0], \"sum\", \"TOYS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Toys Commodity\"/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    transactions: state.transaction.items,\r\n    tloading: state.transaction.loading,\r\n    terror: state.transaction.error,\r\n    categories: state.category.items,\r\n    cloading: state.category.loading,\r\n    cerror: state.category.error\r\n});\r\n\r\nexport default connect(mapStateToProps)(OneB);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport ImportData from \"./components/import-data.component\";\r\nimport EventBus from \"./common/EventBus\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport OneA from \"./components/onea.component\"\r\n\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from './helpers/history';\r\nimport Transactions from \"./components/oneb.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: undefined,\r\n    };\r\n\r\n    history.listen((location) => {\r\n      props.dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n    \r\n    EventBus.on(\"logout\", () => {\r\n      this.logOut();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventBus.remove(\"logout\");\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand myTestClass\">\r\n              AzureAcrobats\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    Account\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/onea\"} className=\"nav-link\">\r\n                    Question 1A\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/oneb\"} className=\"nav-link\">\r\n                    Question 1B\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/import\"} className=\"nav-link\">\r\n                    Import Data\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    Log Out\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                \r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={\"/\", \"/login\"} component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/import\" component={ImportData} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/onea\" component={OneA} />\r\n              <Route exact path=\"/oneb\" component={Transactions} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  const { household } = state.household;\r\n  const { transaction } = state.transaction;\r\n  const { category } = state.transaction;\r\n  return {\r\n    user,\r\n    household,\r\n    transaction,\r\n    category\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nimport App from \"./App\";\r\n\r\n\r\nwindow.addEventListener(\"load\", () =>\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n);\r\n"],"sourceRoot":""}