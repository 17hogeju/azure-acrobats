{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/user.js","actions/types.js","reducers/household.js","reducers/onea.js","reducers/twoa.js","reducers/category.js","reducers/upload.js","reducers/hshdnums.js","reducers/index.js","store.js","http-common.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/user.service.js","components/profile.component.js","actions/user.js","services/upload.service.js","actions/uploadCsv.js","components/import-data.component.js","common/EventBus.js","services/onea.service.js","actions/onea.js","services/hshdnums.service.js","actions/hshdnums.js","components/dropdown.component.js","components/line-graph.component.js","components/onea.component.js","services/TwoA.service.js","actions/twoa.js","components/bar-chart.component.js","components/twoa.component.js","helpers/history.js","services/category.service.js","actions/categories.js","components/oneb.component.js","App.js","actions/message.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","userReducer","users","action","type","payload","filter","id","items","loading","error","householdReducer","state","oneAReducer","console","log","twoAReducer","categoryReducer","uploadReducer","combineReducers","auth","message","household","onea","category","upload","hshd","twoa","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","axios","create","baseURL","headers","API_URL","username","password","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","http","get","delete","Profile","getUser","getThisUser","removeUser","currentUser","UserService","deleteUser","logout","undefined","forceUpdate","onClick","confirm","a","file","options","method","url","body","postHouseholds","postHouseholdsBegin","UploadHouseholdsService","uploadCsv","postHouseholdsSuccess","postHouseholdsFail","postHouseholdsInactive","households","mylabel","ImportData","handleOnDrop","householdData","handleOnError","err","inputElem","reason","alert","headerItems","headerData","checkboxes","Array","fill","map","_","i","handleSubmit","handleBuildTable","changedIndex","checked","head","arr","event","table","forEach","item","element","index","array","trim","herror","hdata","hloading","onDrop","onError","addRemoveButton","key","scope","row","eventBus","on","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","hshd_num","fetchOneA","retrieveOneABegin","OneAService","getOneA","retrieveOneASuccess","retrieveOneAFail","retrieveHshdNumsBegin","retrieveHshdNumsSuccess","retrieveHshdNumsFail","DropDown","onTrigger","onSelectHousehold","HshdNumsService","getHshdNums","hshdserror","hshdsloading","hshds","el","btrim","for","option","LineGraph","height","width","labels","datasets","label","lineTension","backgroundColor","borderColor","borderWidth","plugins","legend","title","text","font","size","scales","y","yaxis","x","xaxis","OneA","fetchHousehold","childData","oneaerror","onealoading","values","weekly_spending","purchase_week","retrieveTwoABegin","retrieveTwoASuccess","TwoA","retrieveTwoAFail","BarChart","OneB","obj","property","j","validMonths","String","startsWith","TwoAService","getTwoA","twoaerror","twoaloading","average_household_spending","createBrowserHistory","retrieveCategoriesBegin","retrieveCategoriesSuccess","categories","retrieveCategoriesFail","CategoryService","getAllCategories","cerror","cloading","getById","App","logOut","listen","getCurrentUser","EventBus","exact","path","component","ReactDOM","render","getElementById"],"mappings":"qTAQQA,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAEvCC,EAAeL,EACjB,CAAEM,YAAY,EAAMN,QACpB,CAAEM,YAAY,EAAON,KAAM,MCV3BK,EAAe,GCGbA,EAAe,GAkBNE,MAhBf,WAAoD,IAA/BC,EAA8B,uDAAtBH,EAAcI,EAAQ,uCACzCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GAEN,ICHuB,gBDIrB,OAAOC,EAET,ICLqB,cDMnB,OAAOH,EAAMI,QAAO,qBAAGC,KAAgBF,EAAQE,MAEjD,QACE,OAAOL,IEfTH,EAAe,CACjBS,MAAO,GACPC,SAAS,EACTC,MAAO,MAyDIC,MAtDf,WAAyD,IAA/BC,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAEpD,OAAQA,EAAOC,MACX,IDCiC,4BCA7B,OAAO,2BACAQ,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,IDTmC,8BCU/B,OAAO,2BACAE,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAEf,IDfgC,2BCgB5B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,IDV6B,4BCWzB,OAAO,2BACAO,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,IDpB+B,8BCqB3B,OAAO,2BACAE,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAGf,ID5B+B,8BC6B3B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,QACI,OAAOO,ICzDbb,EAAe,CACjBS,MAAO,GACPC,SAAS,EACTC,MAAO,MAkCIG,MA/Bf,WAAoD,IAA/BD,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAEnD,OAAQA,EAAOC,MACX,IFK+B,8BEJ3B,OAAO,2BACAQ,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,IFLiC,gCEO7B,OADAI,QAAQC,IAAIZ,EAAOE,SACZ,2BACAO,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAEf,IFZ8B,6BEa1B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,QACI,OAAOO,IClCTb,EAAe,CACjBS,MAAO,GACPC,SAAS,EACTC,MAAO,MAkCIM,MA/Bf,WAAoD,IAA/BJ,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAEnD,OAAQA,EAAOC,MACX,IHwB+B,sBGvB3B,OAAO,2BACAQ,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,IHiBiC,wBGf7B,OADAI,QAAQC,IAAIZ,EAAOE,SACZ,2BACAO,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAEf,IHU8B,qBGT1B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,QACI,OAAOO,IClCTb,EAAe,CACjBS,MAAO,GACPC,SAAS,EACTC,MAAO,MAkCIO,MA/Bf,WAAwD,IAA/BL,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAEvD,OAAQA,EAAOC,MACX,IJSqC,4BIRjC,OAAO,2BACAQ,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,IJDuC,8BIGnC,OADAI,QAAQC,IAAIZ,EAAOE,SACZ,2BACAO,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAEf,IJRoC,2BIShC,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,QACI,OAAOO,IClCTb,EAAe,CACjBS,MAAO,GACPC,SAAS,EACTC,MAAO,MA2CIQ,MAxCf,WAAsD,IAA/BN,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAErD,OAAQA,EAAOC,MAEX,ILiBqC,4BKhBjC,OAAO,2BACAQ,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,ILMiC,yBKL7B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,ILDoC,2BKGhC,OADAI,QAAQC,IAAIZ,EAAOE,SACZ,2BACAO,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAEf,ILRiC,wBKS7B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,QACI,OAAOO,IC3CTb,EAAe,CACjBS,MAAO,GACPC,SAAS,EACTC,MAAO,MAkCIG,MA/Bf,WAAoD,IAA/BD,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAEnD,OAAQA,EAAOC,MACX,INoBgC,uBMnB5B,OAAO,2BACAQ,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAO,OAGf,INakC,yBMX9B,OADAI,QAAQC,IAAIZ,EAAOE,SACZ,2BACAO,GADP,IAEIJ,MAAOL,EAAOE,QACdI,SAAS,EACTC,MAAO,OAEf,INM+B,sBML3B,OAAO,2BACAE,GADP,IAEIJ,MAAO,GACPC,SAAS,EACTC,MAAOP,EAAOE,UAGtB,QACI,OAAOO,IC3BAO,4BAAgB,CAC7BC,KVEe,WAAyC,IAA/BR,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAC7CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,IGlB0B,mBHuB1B,IGtBuB,gBHuBrB,OAAO,2BACFQ,GADL,IAEEZ,YAAY,IAEhB,IG1BuB,gBH2BrB,OAAO,2BACFY,GADL,IAEEZ,YAAY,EACZN,KAAMW,EAAQX,OAElB,IG/BoB,aHqCpB,IGpCgB,SHqCd,OAAO,2BACFkB,GADL,IAEEZ,YAAY,EACZN,KAAM,OAEV,QACE,OAAOkB,IUlCbS,QTTa,WAAyC,IAA/BT,EAA8B,uDAAtBb,EAAcI,EAAQ,uCAC7CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,IEFuB,cFGrB,MAAO,CAAEiB,QAAShB,GAEpB,IEJyB,gBFKvB,MAAO,CAAEgB,QAAS,IAEpB,QACE,OAAOT,ISDXlB,OACA4B,YACAC,OACAC,WACAC,SACAC,OACAC,SCZIC,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,sICX1BO,MAAMC,OAAO,CAC1BC,QAAS,4BACTC,QAAS,CACP,eAAgB,sBCFdC,EAAU,kCAgCD,M,qFA7Bb,SAAMC,EAAUC,GACd,OAAON,IACJO,KAAKH,EAAU,SAAU,CAAEC,WAAUC,aACrCE,MAAK,SAACC,GAKL,OAJIA,EAASC,KAAKC,aAChBjD,aAAakD,QAAQ,OAAQpD,KAAKqD,UAAUJ,EAASC,OAGhDD,EAASC,U,oBAItB,WACEhD,aAAaoD,WAAW,U,sBAG1B,SAAST,EAAUU,EAAOT,GACxB,OAAON,IAAMO,KAAKH,EAAU,SAAU,CACpCC,WACAU,QACAT,e,4BAIJ,WACE,OAAO9C,KAAKC,MAAMC,aAAaC,QAAQ,a,MCrBrCqD,EAAW,SAACC,GAChB,IAAKA,EACH,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,4BAOAC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAK9C,MAAQ,CACX4B,SAAU,GACVC,SAAU,GACVhC,SAAS,GATM,E,oDAanB,SAAiBoD,GACfC,KAAKC,SAAS,CACZvB,SAAUqB,EAAEG,OAAOZ,U,8BAIvB,SAAiBS,GACfC,KAAKC,SAAS,CACZtB,SAAUoB,EAAEG,OAAOZ,U,yBAIvB,SAAYS,GAAI,IAAD,OACbA,EAAEI,iBAEFH,KAAKC,SAAS,CACZtD,SAAS,IAGXqD,KAAKI,KAAKC,cAEV,ICRkB3B,EAAUC,EDQ5B,EAA8BqB,KAAKN,MAA3BY,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAE2B,IAAzCP,KAAKQ,SAASC,QAAQC,QAAQC,OAChCL,GCXgB5B,EDWDsB,KAAKlD,MAAM4B,SCXAC,EDWUqB,KAAKlD,MAAM6B,SCXR,SAAC2B,GAC1C,OAAOM,EAAYC,MAAMnC,EAAUC,GAAUE,MACzC,SAACE,GAMG,OALAuB,EAAS,CACLhE,KZjDa,gBYkDbC,QAAS,CAAEX,KAAMmD,KAGd+B,QAAQC,aAEnB,SAACnE,GACG,IAAMW,EACDX,EAAMkC,UACHlC,EAAMkC,SAASC,MACfnC,EAAMkC,SAASC,KAAKxB,SACxBX,EAAMW,SACNX,EAAMoE,WAWV,OATAV,EAAS,CACLhE,KZ/DU,eYkEdgE,EAAS,CACLhE,KZhEW,cYiEXC,QAASgB,IAGNuD,QAAQG,eDflBpC,MAAK,WACJ0B,EAAQW,KAAK,YACbC,OAAOC,SAASC,YAEjBC,OAAM,WACL,EAAKrB,SAAS,CACZtD,SAAS,OAIfqD,KAAKC,SAAS,CACZtD,SAAS,M,oBAKf,WAAU,IAAD,OACP,EAAgCqD,KAAKN,MAA7BxD,EAAR,EAAQA,WAAYqB,EAApB,EAAoBA,QAEpB,OAAIrB,EACK,kBAAC,IAAD,CAAUqF,GAAG,aAIpB,yBAAKhC,UAAU,aACb,wBAAIA,UAAU,iCAAd,wCACA,yBAAKA,UAAU,uBACb,yBACEiC,IAAI,8CACJC,IAAI,cACJlC,UAAU,qBAGZ,kBAAC,IAAD,CACEmC,SAAU1B,KAAKL,YACfgC,IAAK,SAACC,GACJ,EAAKxB,KAAOwB,IAGd,yBAAKrC,UAAU,cACb,2BAAOsC,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEvF,KAAK,OACLiD,UAAU,eACVuC,KAAK,WACLxC,MAAOU,KAAKlD,MAAM4B,SAClBqD,SAAU/B,KAAKH,iBACfmC,YAAa,CAAC3C,MAIlB,yBAAKE,UAAU,cACb,2BAAOsC,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEvF,KAAK,WACLiD,UAAU,eACVuC,KAAK,WACLxC,MAAOU,KAAKlD,MAAM6B,SAClBoD,SAAU/B,KAAKF,iBACfkC,YAAa,CAAC3C,MAIlB,yBAAKE,UAAU,0BACb,4BACEA,UAAU,4BACV0C,SAAUjC,KAAKlD,MAAMH,SAEpBqD,KAAKlD,MAAMH,SACV,0BAAM4C,UAAU,qCAElB,wCAEF,yBAAKA,UAAU,QACf,kBAAC,IAAD,CAAMgC,GAAI,YAAahC,UAAU,YAAjC,yBAMDhC,GACC,yBAAKgC,UAAU,cACb,yBAAKA,UAAU,qBAAqBC,KAAK,SACtCjC,IAIP,kBAAC,IAAD,CACE2E,MAAO,CAAEC,QAAS,QAClBR,IAAK,SAACC,GACJ,EAAKpB,SAAWoB,Y,GAjIZQ,aAoJLC,mBATf,SAAyBvF,GAGvB,MAAO,CACLZ,WAHqBY,EAAMQ,KAArBpB,WAINqB,QAHkBT,EAAMS,QAAlBA,WAOK8E,CAAyB5C,G,SE9JlCJ,GAAW,SAACC,GAChB,IAAKA,EACH,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,4BAOAJ,GAAQ,SAACE,GACb,IAAKgD,kBAAQhD,GACX,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,+BAOA+C,GAAY,SAACjD,GACjB,GAAIA,EAAMqB,OAAS,GAAKrB,EAAMqB,OAAS,GACrC,OACE,yBAAKpB,UAAU,qBAAqBC,KAAK,SAAzC,sDAOAgD,GAAY,SAAClD,GACjB,GAAIA,EAAMqB,OAAS,GAAKrB,EAAMqB,OAAS,GACrC,OACE,yBAAKpB,UAAU,qBAAqBC,KAAK,SAAzC,sDAOAiD,G,kDACJ,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IACDgD,eAAiB,EAAKA,eAAe9C,KAApB,gBACtB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAK+C,cAAgB,EAAKA,cAAc/C,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAK9C,MAAQ,CACX4B,SAAU,GACVU,MAAO,GACPT,SAAU,GACViE,YAAY,GAXG,E,oDAenB,SAAiB7C,GACfC,KAAKC,SAAS,CACZvB,SAAUqB,EAAEG,OAAOZ,U,2BAIvB,SAAcS,GACZC,KAAKC,SAAS,CACZb,MAAOW,EAAEG,OAAOZ,U,8BAIpB,SAAiBS,GACfC,KAAKC,SAAS,CACZtB,SAAUoB,EAAEG,OAAOZ,U,4BAIvB,SAAeS,GAAI,IDzEIrB,EAAUU,EAAOT,ECyEtB,OAChBoB,EAAEI,iBAEFH,KAAKC,SAAS,CACZ2C,YAAY,IAGd5C,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKQ,SAASC,QAAQC,QAAQC,QAChCX,KAAKN,MACFY,UDpFgB5B,ECqFNsB,KAAKlD,MAAM4B,SDrFKU,ECqFKY,KAAKlD,MAAMsC,MDrFTT,ECqFgBqB,KAAKlD,MAAM6B,SDrFd,SAAC2B,GACpD,OAAOM,EAAYiC,SAASnE,EAAUU,EAAOT,GAAUE,MACnD,SAACC,GAUG,OATAwB,EAAS,CACLhE,KZfgB,qBYkBpBgE,EAAS,CACLhE,KZbW,cYcXC,QAASuC,EAASC,KAAKxB,UAGpBuD,QAAQC,aAEnB,SAACnE,GACG,IAAMW,EACDX,EAAMkC,UACHlC,EAAMkC,SAASC,MACfnC,EAAMkC,SAASC,KAAKxB,SACxBX,EAAMW,SACNX,EAAMoE,WAWV,OATAV,EAAS,CACLhE,KZjCa,kBYoCjBgE,EAAS,CACLhE,KZhCW,cYiCXC,QAASgB,IAGNuD,QAAQG,eCwDlBpC,MAAK,WACJ,EAAKoB,SAAS,CACZ2C,YAAY,OAGftB,OAAM,WACL,EAAKrB,SAAS,CACZ2C,YAAY,S,oBAMtB,WAAU,IAAD,OACCrF,EAAYyC,KAAKN,MAAjBnC,QAER,OACE,yBAAKgC,UAAU,aACb,wBAAIA,UAAU,iCAAd,wCACA,yBAAKA,UAAU,uBACb,yBACEiC,IAAI,8CACJC,IAAI,cACJlC,UAAU,qBAGZ,kBAAC,IAAD,CACEmC,SAAU1B,KAAK0C,eACff,IAAK,SAACC,GACJ,EAAKxB,KAAOwB,KAGZ5B,KAAKlD,MAAM8F,YACX,6BACE,yBAAKrD,UAAU,cACb,2BAAOsC,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEvF,KAAK,OACLiD,UAAU,eACVuC,KAAK,WACLxC,MAAOU,KAAKlD,MAAM4B,SAClBqD,SAAU/B,KAAKH,iBACfmC,YAAa,CAAC3C,GAAUkD,OAI5B,yBAAKhD,UAAU,cACb,2BAAOsC,QAAQ,SAAf,SACA,kBAAC,IAAD,CACEvF,KAAK,OACLiD,UAAU,eACVuC,KAAK,QACLxC,MAAOU,KAAKlD,MAAMsC,MAClB2C,SAAU/B,KAAK2C,cACfX,YAAa,CAAC3C,GAAUD,OAI5B,yBAAKG,UAAU,cACb,2BAAOsC,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEvF,KAAK,WACLiD,UAAU,eACVuC,KAAK,WACLxC,MAAOU,KAAKlD,MAAM6B,SAClBoD,SAAU/B,KAAKF,iBACfkC,YAAa,CAAC3C,GAAUmD,OAI5B,yBAAKjD,UAAU,0BACb,4BAAQA,UAAU,6BAAlB,WACA,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMgC,GAAI,SAAUhC,UAAU,YAA9B,+BAQPhC,GACC,yBAAKgC,UAAU,cACb,yBAAKA,UAAWS,KAAKlD,MAAM8F,WAAa,sBAAwB,qBAAsBpD,KAAK,SACxFjC,GAEH,yBAAKgC,UAAU,0BACf,kBAAC,IAAD,CAAMgC,GAAI,SAAUhC,UAAU,YAA9B,YAMJ,kBAAC,IAAD,CACE2C,MAAO,CAAEC,QAAS,QAClBR,IAAK,SAACC,GACJ,EAAKpB,SAAWoB,Y,GAhJTQ,aAiKRC,oBAPf,SAAyBvF,GAEvB,MAAO,CACLS,QAFkBT,EAAMS,QAAlBA,WAMK8E,CAAyBI,ICnMzB,O,uFATb,SAAQhG,GACN,OAAOqG,EAAKC,IALA,kCAKctG,K,wBAG5B,SAAWA,GACT,OAAOqG,EAAKE,OATA,kCASiBvG,O,mCCL3BwG,G,kDAEJ,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IACDwD,QAAU,EAAKC,YAAYvD,KAAjB,gBACf,EAAKwD,WAAa,EAAKA,WAAWxD,KAAhB,gBAElB,EAAK9C,MAAQ,CACXuG,YAAa,CACX5G,GAAI,KACJiC,SAAU,GACVU,MAAO,IAET7B,QAAS,IAXM,E,+CAiBnB,SAAYd,GAAK,IAAD,OACd6G,GAAYJ,QAAQzG,GAAIoC,MAAK,SAACC,GAC5B,EAAKmB,SAAS,CACZoD,YAAavE,EAASC,OAExB/B,QAAQC,IAAI6B,EAASC,SACpBuC,OAAM,SAACvB,GACR/C,QAAQC,IAAI8C,Q,wBAIhB,SAAWtD,GAAK,IAAD,OACbuD,KAAKN,MAAM6D,WAAW9G,GAAIoC,MAAK,WAC7B,EAAKa,MAAMa,QAAQW,KAAK,KACxBN,EAAY4C,SACZ,EAAK1G,MAAMuG,iBAAcI,EACzBtC,OAAOC,SAASC,SAChB,EAAKqC,iBACJpC,OAAM,SAACvB,GACR/C,QAAQC,IAAI8C,Q,oBAKhB,WAAU,IAAD,OACOsD,EAAgBrD,KAAKN,MAA3B9D,KACR,OAAKyH,EAKH,yBAAK9D,UAAU,aACb,4BAAQA,UAAU,aAChB,6CACgB,gCAAS8D,EAAY3E,UADrC,MAIF,qEACyC,gCAAS2E,EAAYjE,QAE9D,wGAGA,4BAAQG,UAAU,2BAA2BoE,QAAS,WAAUxC,OAAOyC,QAAQ,oBAAoB,EAAKR,WAAWC,EAAY5G,MAA/H,mBAhBK,kBAAC,IAAD,CAAU8E,GAAG,e,GA9CJa,aA2EPC,oBAPf,SAAyBvF,GAEvB,MAAO,CACLlB,KAFakB,EAAMQ,KAAd1B,QAM+B,CAAC2H,WC7Db,SAAC9G,GAAD,gDAAQ,WAAO6D,GAAP,UAAAuD,EAAA,+EAExBP,GAAYC,WAAW9G,GAFC,OAI9B6D,EAAS,CACPhE,KhBhBmB,cgBiBnBC,QAAS,CAAEE,QANiB,+CAS9BO,QAAQC,IAAR,MAT8B,wDAAR,wDD6DboF,CAAuCY,I,mBE5DvC,O,yFAhBX,SAAUa,GACN9G,QAAQC,IAAI6G,GAIZ,IAAIC,EAAU,CACVC,OAAQ,OACRC,IAAKxF,wCACLM,KAAM+E,EACNI,KAAMrI,KAAKqD,UAAU4E,IAEzB,OAAOzF,IAAM0F,O,MCRRI,GAAiB,SAACL,GAAD,OAAU,SAACxD,GACrC,GAAIwD,EAEA,OADAxD,EAAS8D,MACFC,GAAwBC,UAAUR,GAAMjF,MAC3C,SAACE,GAEG,OADAuB,EAASiE,GAAsBxF,IACxB+B,QAAQC,aAEnB,SAACnE,GAEG,OADA0D,EAASkE,GAAmB5H,IACrBkE,QAAQG,YAIvBX,EAASmE,QA4CJL,GAAsB,iBAAO,CACtC9H,KlBxCiC,2BkB2CxBiI,GAAwB,SAAAG,GAAU,MAAK,CAChDpI,KlB3CoC,2BkB4CpCC,QAASmI,IAGAF,GAAqB,SAAA5H,GAAK,MAAK,CACxCN,KlB/CiC,wBkBgDjCC,QAASK,IAGA6H,GAAyB,iBAAO,CACzCnI,KlBnDqC,8BmBtBnCqI,GAAU,CAAC,aAAc,WAAY,gBAIrCC,G,kDAEF,aAAe,IAAD,8BACV,gBAuBJC,aAAe,SAAC9F,GACZ,EAAKkB,UAAS,SAAAnD,GAAK,MAAK,CACpBgI,cAAe/F,OA1BT,EA8BdgG,cAAgB,SAACC,EAAKlB,EAAMmB,EAAWC,GACnCC,MAAMH,IA7BN,EAAKlI,MAAQ,CACTgI,cAAe,KACfM,YAAa,CAAC,OAAQ,OAAQ,QAC9BC,WAAY,CAAC,CAAC,OAAQ,OAAQ,QAAS,CAAC,OAAQ,OAAQ,QAAS,CAAC,OAAQ,OAAQ,SAClFC,WAAY,IAAIC,MAblB,GAa2BC,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAWA,MAGnD,EAAKC,aAAe,EAAKA,aAAahG,KAAlB,gBACpB,EAAKiG,iBAAmB,EAAKA,iBAAiBjG,KAAtB,gBAVd,E,4CAad,SAASG,EAAG+F,GAER,IAAQC,EAAYhG,EAAEG,OAAd6F,QAER/F,KAAKC,UAAS,SAAAnD,GAAK,MAAK,CAGpBwI,WAAYxI,EAAMwI,WAAWG,KAAI,SAACC,EAAGC,GAAJ,OAAUA,IAAMG,GAAeC,W,8BAexE,WAEI,IAAMhH,EAAOiB,KAAKlD,MAAMgI,cACpBkB,EAAOjH,EAAK,GACNmF,EAAV,aAAkBnF,GAAlB,SAEA/B,QAAQC,IAAIiH,GAGZ,IAFA,IAAI+B,EAAM,GAEDN,EAAI,EAAGA,EAAI,IAAMA,EAAIzB,EAAKvD,OAAS,EAAGgF,IAC3C3I,QAAQC,IAAIiH,EAAKyB,IACjBM,EAAI/E,KAAKgD,EAAKyB,GAAG5G,MAGrBiB,KAAKC,UAAS,SAAAnD,GAAK,MAAK,CACpBsI,YAAaY,EAAKjH,KAClBsG,WAAYY,Q,0BAOpB,SAAaC,GACT,IAAMnH,EAAOiB,KAAKlD,MAAMgI,cAExB,GAAK9E,KAAKlD,MAAMgI,cAET,CACH,IAAUZ,EAAV,aAAkBnF,GAAlB,SACIkH,EAAM,CAAElH,KAAM,GAAIoH,MAAO,IAC7BjC,EAAKkC,SAAQ,SAASC,GAClBrJ,QAAQC,IAAIoJ,EAAKtH,MACO,IAArBsH,EAAKtH,KAAK4B,QAAsC,GAApB0F,EAAKtH,KAAK4B,QAA+B,IAAhB0F,EAAKtH,KAAK,KAC9DsH,EAAKtH,KAAKqH,SAAQ,SAAUE,EAASC,EAAOC,GACxCA,EAAMD,GAASC,EAAMD,GAAOE,UAEhCR,EAAIlH,KAAKmC,KAAKmF,OAQU,GAA5BrG,KAAKlD,MAAMwI,WAAW,IACtBtF,KAAK6F,mBACLI,EAAIE,MAAQ,aACZnG,KAAKN,MAAMY,SAAS6D,GAAe8B,KAEA,GAA5BjG,KAAKlD,MAAMwI,WAAW,IAC7BtF,KAAK6F,mBACLI,EAAIE,MAAQ,WACZnG,KAAKN,MAAMY,SAAS6D,GAAe8B,MAGnCjG,KAAK6F,mBACLI,EAAIE,MAAQ,eACZnG,KAAKN,MAAMY,SAAS6D,GAAe8B,UA/BvCd,MAAM,2B,oBAsCd,WAAU,IAAD,OACGG,EAAetF,KAAKlD,MAApBwI,WACJoB,EAAS1G,KAAKN,MAAMgH,OAEpBC,GADW3G,KAAKN,MAAMkH,SACd5G,KAAKN,MAAMiH,OAUvB,OATA3J,QAAQC,IAAI+C,KAAKN,OAGbgH,GACAvB,MAAM,uFAEW,IAAjBwB,EAAMhG,QACNwE,MAAM,8BAGN,yBAAK5F,UAAU,aACX,yBAAKA,UAAU,gEACX,+CACA,uNACA,kBAAC,KAAD,CACIsH,OAAQ7G,KAAK6E,aACbiC,QAAS9G,KAAK+E,cACdgC,iBAAe,GACf,yEAEJ,0BAAMrF,SAAU1B,KAAK4F,aAAcrG,UAAU,QACzC,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACV+F,EAAWG,KAAI,SAACY,EAAMV,GAAP,OACZ,2BAAOpG,UAAU,8DACb,2BACIyH,IAAKrB,EACLrJ,KAAK,WACLyJ,QAASM,EACTtE,SAAU,SAAAhC,GAAC,OAAI,EAAKgC,SAAShC,EAAG4F,MALxC,KAMShB,GAAQgB,QAIzB,2BAAOpG,UAAU,iCAAiCjD,KAAK,SAASgD,MAAM,YAE1E,yBAAKC,UAAU,WAEnB,2BAAOA,UAAU,4BACb,2BAAOA,UAAU,eACb,4BACI,wBAAI0H,MAAM,OAAV,KACCjH,KAAKlD,MAAMsI,YAAYK,KAAI,SAACY,GACzB,OACI,wBAAIY,MAAM,OAAOZ,QAKjC,+BACKrG,KAAKlD,MAAMuI,WAAWI,KAAI,SAACyB,EAAKX,GAC7B,OACI,4BACI,wBAAIU,MAAM,OAAOV,EAAQ,GAErBW,EAAIzB,KAAI,SAACY,GACL,OACI,4BAAKA,kB,GArKhCjE,aA4LVC,gBANS,SAACvF,GAAD,MAAY,CAChC6J,MAAO7J,EAAMa,OAAOjB,MACpBkK,SAAU9J,EAAMa,OAAOhB,QACvB+J,OAAQ5J,EAAMa,OAAOf,SAGVyF,CAAyBuC,IC7LvBuC,GAZA,CACbC,GADa,SACVlB,EAAOmB,GACRC,SAASC,iBAAiBrB,GAAO,SAACnG,GAAD,OAAOsH,EAAStH,EAAEyH,YAErDlH,SAJa,SAIJ4F,EAAOnH,GACduI,SAASG,cAAc,IAAIC,YAAYxB,EAAO,CAAEsB,OAAQzI,MAE1D4I,OAPa,SAONzB,EAAOmB,GACZC,SAASM,oBAAoB1B,EAAOmB,KCK3B,O,uFANb,SAAQQ,GACN,OAAO/E,EAAKC,IAAItE,kCAAoBoJ,O,MCA3BC,GAAY,SAACD,GAAD,OAAc,SAACvH,GAEpC,OADAA,EAASyH,MACFC,GAAYC,QAAQJ,GAAUhJ,MACjC,SAACE,GAEG,OADAuB,EAAS4H,GAAoBnJ,IACtB+B,QAAQC,aAEnB,SAACnE,GAEG,OADA0D,EAAS6H,GAAiBvL,IACnBkE,QAAQG,cAKd8G,GAAoB,iBAAO,CACpCzL,KtBL+B,gCsBQtB4L,GAAsB,SAAAzK,GAAI,MAAK,CACxCnB,KtBXiC,gCsBYjCC,QAASkB,IAGA0K,GAAmB,SAAAvL,GAAK,MAAK,CACtCN,KtBf8B,6BsBgB9BC,QAASK,ICpBE,O,2FANb,WACE,OAAOkG,EAAKC,IAAItE,2C,MCcP2J,GAAwB,iBAAO,CACxC9L,KxBUgC,yBwBPvB+L,GAA0B,SAAAzK,GAAI,MAAK,CAC5CtB,KxBOkC,yBwBNlCC,QAASqB,IAGA0K,GAAuB,SAAA1L,GAAK,MAAK,CAC1CN,KxBG+B,sBwBF/BC,QAASK,IC5BP2L,G,4MAQFC,UAAY,SAACtC,GACTlJ,QAAQC,IAAIiJ,GACZ,EAAKxG,MAAM+I,kBAAkBvC,EAAMhG,OAAOZ,OAC1C4G,EAAM/F,kB,uDAPV,WACIH,KAAKN,MAAMY,UDFgB,SAACA,GAEhC,OADAA,EAAS8H,MACFM,GAAgBC,cAAc9J,MACjC,SAACE,GAEG,OADAuB,EAAS+H,GAAwBtJ,IAC1B+B,QAAQC,aAEnB,SAACnE,GAEG,OADA0D,EAASgI,GAAqB1L,IACvBkE,QAAQG,iB,oBCEvB,WACI,IAAI2H,EAAa5I,KAAKN,MAAMkJ,WACxBC,EAAe7I,KAAKN,MAAMmJ,aAC1BC,EAAQ9I,KAAKN,MAAMoJ,MACnB7C,EAAM,GAEV,OAAI4C,EACO,CACH,yBAAKtJ,UAAU,aACX,yBAAKA,UAAU,gEACX,yBAAKA,UAAU,iBAAiBC,KAAK,cAKjDoJ,EACO,CACP,yBAAKrJ,UAAU,aACX,yBAAKA,UAAU,gEACX,uCAAaqJ,EAAWrL,aAKhCuL,IACA7C,EAAM6C,EAAM/J,KAAK,GAAG0G,KAAI,SAAUsD,GAC9B,OAAOA,EAAGC,SAEdhM,QAAQC,IAAIgJ,IAET,yBAAK1G,UAAU,aAClB,2BAAO0J,IAAI,cAAX,uBACA,4BAAQnH,KAAK,aAAaC,SAAU/B,KAAKwI,WACpCvC,EAAIR,KAAI,SAACyD,EAAQlC,GAAT,OAAiB,4BAAQA,IAAKA,GAAMkC,a,GA/CtC9G,aA2DRC,gBANS,SAACvF,GAAD,MAAY,CAChCgM,MAAOhM,EAAMc,KAAKlB,MAClBmM,aAAc/L,EAAMc,KAAKjB,QACzBiM,WAAY9L,EAAMc,KAAKhB,SAGZyF,CAAyBkG,I,SCGzBY,G,4JA7DX,WACI,OACI,6BACI,kBAAC,KAAD,CACIC,OAAQ,IAAKC,MAAO,IACpBtK,KACI,CACIuK,OAAQtJ,KAAKN,MAAM4J,OACnBC,SAAU,CACN,CACIC,OAAO,EACPhE,MAAM,EACNiE,YAAa,GACbC,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb7K,KAAMiB,KAAKN,MAAMX,QAKjCgF,QAAS,CACL8F,QAAS,CACLC,OAAQ,CACJ3H,SAAS,GAEb4H,MAAO,CACH5H,SAAS,EACT6H,KAAMhK,KAAKN,MAAMqK,MACjBE,KAAM,CACFC,KAAM,MAKlBC,OAAQ,CACJC,EAAG,CACCL,MAAO,CACH5H,SAAS,EACT6H,KAAMhK,KAAKN,MAAM2K,MACjBJ,KAAM,CACFC,KAAM,MAIlBI,EAAG,CACCP,MAAO,CACH5H,SAAS,EACT6H,KAAMhK,KAAKN,MAAM6K,MACjBN,KAAM,CACFC,KAAM,e,GApDtB9H,aCKlBoI,G,kDAEF,WAAY9K,GAAO,IAAD,8BACd,cAAMA,IAWV+K,eAAiB,SAACC,GACd,EAAKzK,SAAS,CAAClB,KAAM2L,IACrB,EAAKhL,MAAMY,SAASwH,GAAU4C,KAZ9B,EAAK5N,MAAQ,CACTiC,KAAM,QAHI,E,qDAOlB,WACIiB,KAAKN,MAAMY,SAASwH,GAAU,W,oBASlC,WAGI,GAFA9K,QAAQC,IAAI+C,KAAKN,QACCM,KAAKN,MAAM9D,KAE3B,OAAO,kBAAC,IAAD,CAAU2F,GAAG,WAEtB,IAAIoJ,EAAY3K,KAAKN,MAAMiL,UACvBC,EAAc5K,KAAKN,MAAMkL,YACzBnN,EAAOuC,KAAKN,MAAMjC,KAClB6L,EAAS,GACTuB,EAAS,GACTd,EAAQ,0CACZ,GAAIa,EACA,MAAO,CACH,yBAAKrL,UAAU,aACX,yBAAKA,UAAU,gEACX,yBAAKA,UAAU,iBAAiBC,KAAK,cAKrD,GAAImL,EACA,MAAO,CACH,yBAAKpL,UAAU,aACX,yBAAKA,UAAU,gEACX,uCAAaoL,EAAUpN,YAMvC,GADAP,QAAQC,IAAIQ,EAAKsB,MACU,IAAxBtB,EAAKsB,KAAK,GAAG4B,OAAa,CACzB,IAAI5B,EAAOtB,EAAKsB,KAAK,GACrB/B,QAAQC,IAAI8B,GACZgL,EAAQ,sCAAwChL,EAAK,GAAG8I,SACxD,IAAI,IAAIlC,EAAI,EAAGA,EAAI5G,EAAK4B,OAAQgF,IAC5B3I,QAAQC,IAAI8B,EAAK4G,GAAGmF,iBACpBxB,EAAOpI,KAAKnC,EAAK4G,GAAGoF,eACpBF,EAAO3J,KAAKnC,EAAK4G,GAAGmF,iBAG5B,OACI,yBAAKvL,UAAU,aACX,yBAAKA,UAAU,gEACX,qCACA,6DACA,kBAAC,GAAD,CAAUkJ,kBAAmBzI,KAAKyK,iBAClC,kBAAC,GAAD,CAAWnB,OAAQA,EAAQvK,KAAM8L,EAAQR,MAAM,mCAAmCE,MAAM,4BAA4BR,MAAOA,U,GAlE5H3H,aAiFJC,gBAPS,SAACvF,GAAD,MAAY,CAChClB,KAAMkB,EAAMQ,KAAKpB,WACjBuB,KAAMX,EAAMW,KAAKf,MACjBkO,YAAa9N,EAAMW,KAAKd,QACxBgO,UAAW7N,EAAMW,KAAKb,SAGXyF,CAAyBmI,IC7EzB,O,uFANb,WACE,OAAO1H,EAAKC,IAAItE,uC,MCcPuM,GAAoB,iBAAO,CACpC1O,K7Bc+B,wB6BXtB2O,GAAsB,SAAAC,GAAI,MAAK,CACxC5O,K7BWiC,wB6BVjCC,QAAS2O,IAGAC,GAAmB,SAAAvO,GAAK,MAAK,CACtCN,K7BO8B,qB6BN9BC,QAASK,ICgCEwO,G,4JA3DX,WACI,OACI,6BACI,kBAAC,KAAD,CACIhC,OAAQ,IAAKC,MAAO,IACpBtK,KACI,CACIuK,OAAQtJ,KAAKN,MAAM4J,OACnBC,SAAU,CACN,CACIC,OAAO,EACPE,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACb7K,KAAMiB,KAAKN,MAAMX,QAKjCgF,QAAS,CACL8F,QAAS,CACLC,OAAQ,CACJ3H,SAAS,GAEb4H,MAAO,CACH5H,SAAS,EACT6H,KAAMhK,KAAKN,MAAMqK,MACjBE,KAAM,CACFC,KAAM,MAKlBC,OAAQ,CACJC,EAAG,CACCL,MAAO,CACH5H,SAAS,EACT6H,KAAMhK,KAAKN,MAAM2K,MACjBJ,KAAM,CACFC,KAAM,MAIlBI,EAAG,CACCP,MAAO,CACH5H,SAAS,EACT6H,KAAMhK,KAAKN,MAAM6K,MACjBN,KAAM,CACFC,KAAM,e,GAlDvB9H,aCCjBiJ,G,6JAGF,SAAQC,EAAKC,EAAUzJ,GACnB,IAAI6D,EACA6F,EAAI,EACJhF,EAAQ,GACRiF,EAAc,CAAC,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACzH,GAAG3J,EACC,IAAI6D,EAAI,EAAGA,EAAI2F,EAAI3K,OAAQgF,IACpB+F,OAAOJ,EAAI3F,GAAJ,YAAwB7D,IAC3BwJ,EAAI3F,GAAG,cAAcgG,WAAWF,EAAYD,IAC3ChF,EAAMtF,KAAKoK,EAAI3F,GAAG4F,KAElB/E,EAAMtF,KAAK,GACXsF,EAAMtF,KAAKoK,EAAI3F,GAAG4F,IAElBC,GAAQ,GAEZA,GAAQ,QAIhB,IAAI7F,EAAI,EAAGA,EAAI2F,EAAI3K,OAAQgF,IACvBa,EAAMtF,KAAKoK,EAAI3F,GAAG4F,IAG1B,OAAO/E,I,+BAGX,WF3BqB,IAACqB,EE4BlB7H,KAAKN,MAAMY,UF5BoB,SAACA,GAEpC,OADAA,EAAS0K,MACFY,GAAYC,QAAQhE,GAAUhJ,MACjC,SAACE,GAEG,OADAuB,EAAS2K,GAAoBlM,IACtB+B,QAAQC,aAEnB,SAACnE,GAEG,OADA0D,EAAS6K,GAAiBvO,IACnBkE,QAAQG,iB,oBEsBvB,WACI,IAAI6K,EAAY9L,KAAKN,MAAMoM,UACvBC,EAAc/L,KAAKN,MAAMqM,YACzBlO,EAAOmC,KAAKN,MAAM7B,KAClByL,EAAS,GACTuB,EAAS,GAEb,OADA7N,QAAQC,IAAIY,GACRkO,EACO,CACH,yBAAKxM,UAAU,aACX,yBAAKA,UAAU,gEACX,yBAAKA,UAAU,iBAAiBC,KAAK,cAKjDsM,EACO,CACP,yBAAKvM,UAAU,aACX,yBAAKA,UAAU,gEACX,uCAAauM,EAAUvO,aAK/BM,IACAyL,EAASzL,EAAKkB,KAAK,GAAG0G,KAAI,SAAUsD,GAChC,OAAOA,EAAGrL,YAGdmN,EAAShN,EAAKkB,KAAK,GAAG0G,KAAI,SAAUsD,GAChC,OAAOA,EAAGiD,8BAEdhP,QAAQC,IAAIqM,GACZtM,QAAQC,IAAI4N,IAGR,yBAAKtL,UAAU,aACX,yBAAKA,UAAU,gEACX,qCACA,iHACA,kBAAC,GAAD,CAAU+J,OAAQA,EAAQvK,KAAM8L,EAAQR,MAAM,oCAAoCE,MAAM,WAAWR,MAAM,6D,GA3E9G3H,aAyFJC,gBANS,SAACvF,GAAD,MAAY,CAChCe,KAAMf,EAAMe,KAAKnB,MACjBqP,YAAajP,EAAMe,KAAKlB,QACxBmP,UAAWhP,EAAMe,KAAKjB,SAGXyF,CAAyBgJ,I,SC5F3B9K,GAAU0L,eCWR,O,gGANb,WACE,OAAOnJ,EAAKC,IAAItE,4C,MCcPyN,GAA0B,iBAAO,CAC1C5P,KlCDqC,8BkCI5B6P,GAA4B,SAAAC,GAAU,MAAK,CACpD9P,KlCPuC,8BkCQvCC,QAAS6P,IAGAC,GAAyB,SAAAzP,GAAK,MAAK,CAC5CN,KlCXoC,2BkCYpCC,QAASK,IC5BPyO,G,6JAGF,SAAQC,EAAKC,EAAUzJ,GACnB,IAAI6D,EACA6F,EAAI,EACJhF,EAAQ,GACRiF,EAAc,CAAC,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACzH,GAAG3J,EACC,IAAI6D,EAAI,EAAGA,EAAI2F,EAAI3K,OAAQgF,IACpB+F,OAAOJ,EAAI3F,GAAJ,YAAwB7D,IAC3BwJ,EAAI3F,GAAG,cAAcgG,WAAWF,EAAYD,IAC3ChF,EAAMtF,KAAKoK,EAAI3F,GAAG4F,KAElB/E,EAAMtF,KAAK,GACXsF,EAAMtF,KAAKoK,EAAI3F,GAAG4F,IAElBC,GAAQ,GAEZA,GAAQ,QAIhB,IAAI7F,EAAI,EAAGA,EAAI2F,EAAI3K,OAAQgF,IACvBa,EAAMtF,KAAKoK,EAAI3F,GAAG4F,IAG1B,OAAO/E,I,+BAGX,WACIxG,KAAKN,MAAMY,UD5BkB,SAACA,GAElC,OADAA,EAAS4L,MACFI,GAAgBC,mBAAmB1N,MACtC,SAACE,GAEG,OADAuB,EAAS6L,GAA0BpN,IAC5B+B,QAAQC,aAEnB,SAACnE,GAEG,OADA0D,EAAS+L,GAAuBzP,IACzBkE,QAAQG,iB,oBCsBvB,WACI,IAAIuL,EAASxM,KAAKN,MAAM8M,OACpBC,EAAWzM,KAAKN,MAAM+M,SACtBL,EAAapM,KAAKN,MAAM0M,WAC5B,OAAIK,EACO,CACH,yBAAKlN,UAAU,aACX,yBAAKA,UAAU,gEACX,yBAAKA,UAAU,iBAAiBC,KAAK,cAKjDgN,EACO,CACP,yBAAKjN,UAAU,aACX,yBAAKA,UAAU,gEACX,uCAAaiN,EAAOjP,YAMxB,yBAAKgC,UAAU,aACX,yBAAKA,UAAU,gEACX,qCACA,kFACA,kBAAC,GAAD,CAAW+J,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,YAAaA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,YAAasL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,8BAChN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,WAAYA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,WAAYsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,6BAC9M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,QAASA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,QAASsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,0BACxM,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,QAASA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,QAASsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,0BACxM,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,UAAWA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,UAAWsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,4BAC5M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,wBAAyBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,wBAAyBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,0CACxO,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,oBAAqBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,oBAAqBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,sCAChO,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,iBAAkBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,iBAAkBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,mCAC1N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,gBAAiBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,gBAAiBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,kCACxN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,YAAaA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,YAAasL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,8BAChN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,aAAcA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,aAAcsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,+BAClN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,SAAUA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,SAAUsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,2BAC1M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,QAASA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,QAASsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,0BACxM,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,aAAcA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,aAAcsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,+BAClN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,eAAgBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,eAAgBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,iCACtN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,UAAWA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,UAAWsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,4BAC5M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,eAAgBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,eAAgBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,iCACtN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,QAASA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,QAASsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,0BACxM,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,kBAAmBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,kBAAmBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,oCAC5N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,WAAYA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,WAAYsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,6BAC9M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,aAAcA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,aAAcsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,+BAClN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,yBAA0BA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,yBAA0BsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,2CAC1O,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,sBAAuBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,sBAAuBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,wCACpO,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,eAAgBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,eAAgBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,iCACtN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,kBAAmBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,kBAAmBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,oCAC5N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,gBAAiBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,gBAAiBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,kCACxN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,eAAgBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,eAAgBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,iCACtN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,kBAAmBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,kBAAmBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,kCAC5N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,kBAAmBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,kBAAmBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,kCAC5N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,iBAAkBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,iBAAkBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,iCAC1N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,oBAAqBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,oBAAqBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,sCAChO,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,cAAeA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,cAAesL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,gCACpN,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,QAASA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,QAASsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,mCACxM,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,WAAYA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,WAAYsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,6BAC9M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,iBAAkBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,iBAAkBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,mCAC1N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,OAAQA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,OAAQsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,yBACtM,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,WAAYA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,WAAYsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,6BAC9M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,WAAYA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,WAAYsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,6BAC9M,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,qBAAsBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,qBAAsBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,uCAClO,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,kBAAmBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,kBAAmBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,oCAC5N,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,oBAAqBA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,oBAAqBsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,sCAChO,kBAAC,GAAD,CAAWT,OAAQtJ,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,aAAc,QAASA,KAAMiB,KAAK0M,QAAQN,EAAWrN,KAAK,GAAI,MAAO,QAASsL,MAAM,mCAAmCE,MAAM,iBAAiBR,MAAM,gC,GAtG7M3H,aAoHJC,gBANS,SAACvF,GAAD,MAAY,CAChCsP,WAAYtP,EAAMY,SAAShB,MAC3B+P,SAAU3P,EAAMY,SAASf,QACzB6P,OAAQ1P,EAAMY,SAASd,SAGZyF,CAAyBgJ,ICpGlCsB,G,kDACJ,WAAYjN,GAAQ,IAAD,8BACjB,cAAMA,IACDkN,OAAS,EAAKA,OAAOhN,KAAZ,gBAEd,EAAK9C,MAAQ,CACXuG,iBAAaI,GAGflD,GAAQsM,QAAO,SAACzL,GACd1B,EAAMY,SCxBuB,CACjChE,KrCD2B,qBoCeR,E,qDAanB,WAAqB,IAAD,OACZV,EAAOgF,EAAYkM,iBAErBlR,GACFoE,KAAKC,SAAS,CACZoD,YAAazH,IAIjBmR,GAAS3F,GAAG,UAAU,WACpB,EAAKwF,c,kCAIT,WACEG,GAASpF,OAAO,Y,oBAGlB,WACE/G,EAAY4C,SACZxD,KAAKC,SAAS,CACZoD,iBAAaI,IAEftC,OAAOC,SAASC,W,oBAGlB,WACE,IAAQgC,EAAgBrD,KAAKlD,MAArBuG,YAER,OACI,6BACE,yBAAK9D,UAAU,4CACb,kBAAC,IAAD,CAAMgC,GAAI,IAAKhC,UAAU,4BAAzB,iBAGA,yBAAKA,UAAU,uBAGd8D,EACC,yBAAK9D,UAAU,sBACb,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgC,GAAI,WAAYhC,UAAU,YAAhC,YAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgC,GAAI,QAAShC,UAAU,YAA7B,0BAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgC,GAAI,QAAShC,UAAU,YAA7B,gBAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgC,GAAI,QAAShC,UAAU,YAA7B,gBAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgC,GAAI,UAAWhC,UAAU,YAA/B,gBAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMgC,GAAI,SAAUhC,UAAU,WAAWoE,QAAS3D,KAAK4M,QAAvD,aAMJ,+BAMJ,yBAAKrN,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyN,OAAK,EAACC,KAAW,SAAUC,UAAWzN,IAC7C,kBAAC,IAAD,CAAOuN,OAAK,EAACC,KAAK,YAAYC,UAAWzK,KACzC,kBAAC,IAAD,CAAOuK,OAAK,EAACC,KAAK,UAAUC,UAAWtI,KACvC,kBAAC,IAAD,CAAOoI,OAAK,EAACC,KAAK,WAAWC,UAAWjK,KACxC,kBAAC,IAAD,CAAO+J,OAAK,EAACC,KAAK,QAAQC,UAAW1C,KACrC,kBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,QAAQC,UAAW7B,KACrC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,QAAQC,UAAWhC,Y,GApGjC9I,aA+HHC,oBAnBf,SAAyBvF,GAQvB,MAAO,CACLlB,KARekB,EAAMQ,KAAf1B,KASN4B,UARoBV,EAAMU,UAApBA,UASNC,KAReX,EAAMW,KAAfA,KASNC,SARmBZ,EAAMY,SAAnBA,SASNE,KARed,EAAMc,KAAfA,KASNC,KARef,EAAMe,KAAfA,KASNF,OARiBb,EAAMa,OAAjBA,UAYK0E,CAAyBsK,IE1IxCxL,OAAOoG,iBAAiB,QAAQ,kBAChC4F,IAASC,OACP,kBAAC,IAAD,CAAUpP,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJsJ,SAAS+F,eAAe,c","file":"static/js/main.5250bb39.chunk.js","sourcesContent":["import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}","import {\n    RETRIEVE_USER,\n    DELETE_USER\n  } from \"../actions/types\";\n  \n  const initialState = [];\n  \n  function userReducer(users = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n  \n      case RETRIEVE_USER:\n        return payload;\n  \n      case DELETE_USER:\n        return users.filter(({ id }) => id !== payload.id);\n  \n      default:\n        return users;\n    }\n  };\n  \n  export default userReducer;","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const RETRIEVE_USER = \"RETRIEVE_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\n\nexport const RETRIEVE_HOUSEHOLDS_SUCCESS = \"RETRIEVE_HOUSEHOLDS_SUCCESS\";\nexport const RETRIEVE_HOUSEHOLDS_FAIL = \"RETRIEVE_HOUSEHOLDS_FAIL\";\nexport const RETRIEVE_HOUSEHOLDS_BEGIN = \"RETRIEVE_HOUSEHOLDS_BEGIN\";\n\nexport const RETRIEVE_ONEA_SUCCESS = \"RETRIEVE_TRANSACTIONS_SUCCESS\";\nexport const RETRIEVE_ONEA_FAIL = \"RETRIEVE_TRANSACTIONS_FAIL\";\nexport const RETRIEVE_ONEA_BEGIN = \"RETRIEVE_TRANSACTIONS_BEGIN\";\n\nexport const RETRIEVE_CATEGORIES_SUCCESS = \"RETRIEVE_CATEGORIES_SUCCESS\";\nexport const RETRIEVE_CATEGORIES_FAIL = \"RETRIEVE_CATEGORIES_FAIL\";\nexport const RETRIEVE_CATEGORIES_BEGIN = \"RETRIEVE_CATEGORIES_BEGIN\";\n\nexport const POST_HOUSEHOLDS_SUCCESS = \"RETRIEVE_HOUSEHOLDS_SUCCESS\";\nexport const POST_HOUSEHOLDS_FAIL = \"RETRIEVE_HOUSEHOLDS_FAIL\";\nexport const POST_HOUSEHOLDS_BEGIN = \"RETRIEVE_HOUSEHOLDS_BEGIN\";\n\nexport const UPLOAD_HOUSHOLDS_BEGIN =\"UPLOAD_HOUSHOLDS_BEGIN\";\nexport const UPLOAD_HOUSHOLDS_SUCCESS = \"UPLOAD_HOUSHOLDS_SUCCESS\";\nexport const UPLOAD_HOUSHOLDS_FAIL = \"UPLOAD_HOUSHOLDS_FAIL\";\nexport const UPLOAD_HOUSHOLDS_INACTIVE = \"UPLOAD_HOUSHOLDS_INACTIVE\";\n\nexport const RETRIEVE_HSHDS_BEGIN = \"RETRIEVE_HSHDS_BEGIN\";\nexport const RETRIEVE_HSHDS_SUCCESS = \"RETRIEVE_HSHDS_SUCCESS\";\nexport const RETRIEVE_HSHDS_FAIL = \"RETRIEVE_HSHDS_FAIL\";\n\nexport const RETRIEVE_TWOA_BEGIN = \"RETRIEVE_TWOA_BEGIN\";\nexport const RETRIEVE_TWOA_SUCCESS = \"RETRIEVE_TWOA_SUCCESS\";\nexport const RETRIEVE_TWOA_FAIL = \"RETRIEVE_TWOA_FAIL\";\n\n","import {\n    RETRIEVE_HOUSEHOLDS_SUCCESS, RETRIEVE_HOUSEHOLDS_FAIL, RETRIEVE_HOUSEHOLDS_BEGIN, POST_HOUSEHOLDS_BEGIN, POST_HOUSEHOLDS_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n    items: [],\n    loading: true,\n    error: null\n};\n\nfunction householdReducer(state = initialState, action) {\n\n    switch (action.type) {\n        case RETRIEVE_HOUSEHOLDS_BEGIN:\n            return {\n                ...state,\n                items: [],\n                loading: true,\n                error: null,\n            };\n\n        case RETRIEVE_HOUSEHOLDS_SUCCESS:\n            return {\n                ...state,\n                items: action.payload,\n                loading: false,\n                error: null,\n            };\n        case RETRIEVE_HOUSEHOLDS_FAIL:\n            return {\n                ...state,\n                items: [],\n                loading: false,\n                error: action.payload,\n            }\n\n        case POST_HOUSEHOLDS_BEGIN:\n            return {\n                ...state,\n                items: [],\n                loading: true,\n                error: null\n            }\n\n        case POST_HOUSEHOLDS_SUCCESS:\n            return {\n                ...state,\n                items: action.payload,\n                loading: false,\n                error: null\n            }\n\n        case POST_HOUSEHOLDS_SUCCESS:\n            return {\n                ...state,\n                items: [],\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state;\n    };\n}\nexport default householdReducer;","import {\n    RETRIEVE_ONEA_SUCCESS, RETRIEVE_ONEA_FAIL, RETRIEVE_ONEA_BEGIN\n} from \"../actions/types\";\n\nconst initialState = {\n    items: [],\n    loading: true,\n    error: null\n  };\n\nfunction oneAReducer(state = initialState, action) {\n\nswitch (action.type) {\n    case RETRIEVE_ONEA_BEGIN:\n        return {\n            ...state,\n            items: [],\n            loading: true,\n            error: null,\n        };\n\n    case RETRIEVE_ONEA_SUCCESS:\n        console.log(action.payload);\n        return {\n            ...state,\n            items: action.payload,\n            loading: false,\n            error: null,\n        };\n    case RETRIEVE_ONEA_FAIL:\n        return {\n            ...state,\n            items: [],\n            loading: false,\n            error: action.payload,\n        }\n\n    default:\n        return state;\n  };\n}\nexport default oneAReducer;","import {\n    RETRIEVE_TWOA_SUCCESS, RETRIEVE_TWOA_FAIL, RETRIEVE_TWOA_BEGIN\n} from \"../actions/types\";\n\nconst initialState = {\n    items: [],\n    loading: true,\n    error: null\n  };\n\nfunction twoAReducer(state = initialState, action) {\n\nswitch (action.type) {\n    case RETRIEVE_TWOA_BEGIN:\n        return {\n            ...state,\n            items: [],\n            loading: true,\n            error: null,\n        };\n\n    case RETRIEVE_TWOA_SUCCESS:\n        console.log(action.payload);\n        return {\n            ...state,\n            items: action.payload,\n            loading: false,\n            error: null,\n        };\n    case RETRIEVE_TWOA_FAIL:\n        return {\n            ...state,\n            items: [],\n            loading: false,\n            error: action.payload,\n        }\n\n    default:\n        return state;\n  };\n}\nexport default twoAReducer;","import {\n    RETRIEVE_CATEGORIES_SUCCESS, RETRIEVE_CATEGORIES_FAIL, RETRIEVE_CATEGORIES_BEGIN\n} from \"../actions/types\";\n\nconst initialState = {\n    items: [],\n    loading: true,\n    error: null\n  };\n\nfunction categoryReducer(state = initialState, action) {\n\nswitch (action.type) {\n    case RETRIEVE_CATEGORIES_BEGIN:\n        return {\n            ...state,\n            items: [],\n            loading: true,\n            error: null,\n        };\n\n    case RETRIEVE_CATEGORIES_SUCCESS:\n        console.log(action.payload);\n        return {\n            ...state,\n            items: action.payload,\n            loading: false,\n            error: null,\n        };\n    case RETRIEVE_CATEGORIES_FAIL:\n        return {\n            ...state,\n            items: [],\n            loading: false,\n            error: action.payload,\n        }\n\n    default:\n        return state;\n  };\n}\nexport default categoryReducer;","import {\n    UPLOAD_HOUSHOLDS_BEGIN, UPLOAD_HOUSHOLDS_SUCCESS, UPLOAD_HOUSHOLDS_FAIL, UPLOAD_HOUSHOLDS_INACTIVE\n} from \"../actions/types\";\n\nconst initialState = {\n    items: [],\n    loading: false,\n    error: null\n  };\n\nfunction uploadReducer(state = initialState, action) {\n\nswitch (action.type) {\n\n    case UPLOAD_HOUSHOLDS_INACTIVE:\n        return {\n            ...state,\n            items: [],\n            loading: false,\n            error: null\n        };\n\n    case UPLOAD_HOUSHOLDS_BEGIN:\n        return {\n            ...state,\n            items: [],\n            loading: true,\n            error: null,\n        };\n\n    case UPLOAD_HOUSHOLDS_SUCCESS:\n        console.log(action.payload);\n        return {\n            ...state,\n            items: action.payload,\n            loading: false,\n            error: null,\n        };\n    case UPLOAD_HOUSHOLDS_FAIL:\n        return {\n            ...state,\n            items: [],\n            loading: false,\n            error: action.payload,\n        }\n\n    default:\n        return state;\n  };\n}\nexport default uploadReducer;","import {\n    RETRIEVE_HSHDS_BEGIN, RETRIEVE_HSHDS_SUCCESS, RETRIEVE_HSHDS_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n    items: [],\n    loading: true,\n    error: null\n  };\n\nfunction oneAReducer(state = initialState, action) {\n\nswitch (action.type) {\n    case RETRIEVE_HSHDS_BEGIN:\n        return {\n            ...state,\n            items: [],\n            loading: true,\n            error: null,\n        };\n\n    case RETRIEVE_HSHDS_SUCCESS:\n        console.log(action.payload);\n        return {\n            ...state,\n            items: action.payload,\n            loading: false,\n            error: null,\n        };\n    case RETRIEVE_HSHDS_FAIL:\n        return {\n            ...state,\n            items: [],\n            loading: false,\n            error: action.payload,\n        }\n\n    default:\n        return state;\n  };\n}\nexport default oneAReducer;","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\nimport user from \"./user\";\nimport household from \"./household\";\nimport onea from \"./onea\";\nimport twoa from \"./twoa\";\nimport category from \"./category\";\nimport upload from \"./upload\";\nimport hshd from \"./hshdnums\";\n\nexport default combineReducers({\n  auth,\n  message,\n  user,\n  household, \n  onea,\n  category,\n  upload,\n  hshd,\n  twoa\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import axios from \"axios\";\nimport http from \"../http-common\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password))\n        .then(() => {\n          history.push(\"/profile\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            loading: false\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n\n    if (isLoggedIn) {\n      return <Redirect to=\"/profile\" />;\n    }\n\n    return (\n      <div className=\"col-md-12\">\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group mt-3 d-flex\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n              <div className=\"ml-3\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                    No account? Sign Up\n                  </Link>\n              </div>\n            </div>\n\n            {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n    return AuthService.register(username, email, password).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const login = (username, password) => (dispatch) => {\n    return AuthService.login(username, password).then(\n        (data) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: { user: data },\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: LOGIN_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const logout = () => (dispatch) => {\n    AuthService.logout();\n\n    dispatch({\n        type: LOGOUT,\n    });\n};","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.username, this.state.email, this.state.password)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <h3 className=\"d-flex justify-content-center\">Welcome to the AzureAcrobats Project</h3>\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group mt-3 d-flex\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                  <div className=\"ml-3\">\n                    <Link to={\"/login\"} className=\"nav-link\">\n                      Have an account? Sign in\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div className={this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                  {message}\n                </div>\n                <div className=\"form-group mt-3 d-flex\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                      Log in\n                    </Link>\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);","\nimport http from '../http-common';\n\nconst API_URL = 'http://localhost:8080/api/user/';\n\nclass UserService {\n\n  getUser(id){\n    return http.get(API_URL + id);\n  }\n\n  deleteUser(id){\n    return http.delete(API_URL + id);\n  }\n}\n\nexport default new UserService();","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport UserService from \"../services/user.service\";\nimport { deleteUser } from \"../actions/user\";\nimport AuthService from \"../services/auth.service\";\n\nclass Profile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.getUser = this.getThisUser.bind(this);\n    this.removeUser = this.removeUser.bind(this);\n\n    this.state = {\n      currentUser: {\n        id: null,\n        username: \"\",\n        email: \"\",\n      },\n      message: \"\",\n    };\n  }\n\n\n\n  getThisUser(id) {\n    UserService.getUser(id).then((response) => {\n      this.setState({\n        currentUser: response.data,\n      });\n      console.log(response.data);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  removeUser(id) {\n    this.props.deleteUser(id).then(() => {\n      this.props.history.push(\"/\");\n      AuthService.logout();\n      this.state.currentUser = undefined;\n      window.location.reload();\n      this.forceUpdate();\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n\n  render() {\n    const { user: currentUser } = this.props;\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            Welcome home, <strong>{currentUser.username}</strong>!\n          </h3>\n        </header>\n        <p>\n          The email you have registered with is: <strong>{currentUser.email}</strong>\n        </p>\n        <p>\n          If this is not correct, you can delete your account and create a new one:\n        </p>\n        <button className=\"btn btn-danger btn-block\" onClick={() => {if(window.confirm('Delete account?')){this.removeUser(currentUser.id)}}}>Delete Account</button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  const {user} = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps, {deleteUser})(Profile);","import {\n    RETRIEVE_USER,\n    DELETE_USER,\n  } from \"./types\";\n  \n  import UserService from \"../services/user.service\";\n  \n  \n  export const retrieveUser = (id) => async (dispatch) => {\n    try {\n      const res = await UserService.getUser(id);\n  \n      dispatch({\n        type: RETRIEVE_USER,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  export const deleteUser = (id) => async (dispatch) => {\n    try {\n      await UserService.deleteUser(id);\n  \n      dispatch({\n        type: DELETE_USER,\n        payload: { id },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };","import axios from \"axios\";\n\nconst API_URL = 'http://localhost:8080/api/';\n\nclass UploadHouseholdsService {\n\n    uploadCsv(file) {\n        console.log(file);\n        // console.log(file.type);\n        // var bodyFormData = new FormData();\n        // bodyFormData.append('file', file);\n        let options = {\n            method: \"post\",\n            url: API_URL + 'csv/upload/',\n            data: file,\n            body: JSON.stringify(file),\n        }\n        return axios(options);\n    }\n\n}\n\nexport default new UploadHouseholdsService();","import UploadHouseholdsService from \"../services/upload.service\";\n\nimport {\n    UPLOAD_HOUSHOLDS_BEGIN,\n    UPLOAD_HOUSHOLDS_SUCCESS,\n    UPLOAD_HOUSHOLDS_FAIL,\n    UPLOAD_HOUSHOLDS_INACTIVE\n} from \"./types\";\n\nexport const postHouseholds = (file) => (dispatch) => {\n    if (file) {\n        dispatch(postHouseholdsBegin());\n        return UploadHouseholdsService.uploadCsv(file).then(\n            (data) => {\n                dispatch(postHouseholdsSuccess(data));\n                return Promise.resolve();\n            },\n            (error) => {\n                dispatch(postHouseholdsFail(error));\n                return Promise.reject();\n            }\n        );\n    } else {\n        dispatch(postHouseholdsInactive());\n    }\n\n};\n\n// export const postTransactions = (file) => (dispatch) => {\n//     if (file) {\n//         dispatch(postTransactionsBegin());\n//         return UploadHouseholdsService.uploadCsv(file).then(\n//             (data) => {\n//                 dispatch(postHouseholdsSuccess(data));\n//                 return Promise.resolve();\n//             },\n//             (error) => {\n//                 dispatch(postHouseholdsFail(error));\n//                 return Promise.reject();\n//             }\n//         );\n//     } else {\n//         dispatch(postHouseholdsInactive());\n//     }\n\n// };\n\n// export const postHouseholds = (file) => (dispatch) => {\n//     console.log(file);\n//     if (file) {\n//         dispatch(postHouseholdsBegin());\n//         return UploadHouseholdsService.uploadCsv(file).then(\n//             (data) => {\n//                 dispatch(postHouseholdsSuccess(data));\n//                 return Promise.resolve();\n//             },\n//             (error) => {\n//                 dispatch(postHouseholdsFail(error));\n//                 return Promise.reject();\n//             }\n//         );\n//     } else {\n//         dispatch(postHouseholdsInactive());\n//     }\n\n// };\n\nexport const postHouseholdsBegin = () => ({\n    type: UPLOAD_HOUSHOLDS_BEGIN,\n});\n\nexport const postHouseholdsSuccess = households => ({\n    type: UPLOAD_HOUSHOLDS_SUCCESS,\n    payload: households\n});\n\nexport const postHouseholdsFail = error => ({\n    type: UPLOAD_HOUSHOLDS_FAIL,\n    payload: error\n});\n\nexport const postHouseholdsInactive = () => ({\n    type: UPLOAD_HOUSHOLDS_INACTIVE,\n});","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSVReader, jsonToCSV } from 'react-papaparse';\nimport { postHouseholds } from \"../actions/uploadCsv\";\nimport { postTransactions } from \"../actions/uploadCsv\";\nimport { postProducts } from \"../actions/uploadCsv\";\n\n\nconst n = 3;\nconst mylabel = [\"households\", \"products\", \"transactions\"];\n\n\n\nclass ImportData extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            householdData: null,\n            headerItems: [\"null\", \"null\", \"null\"],\n            headerData: [[\"null\", \"null\", \"null\"], [\"null\", \"null\", \"null\"], [\"null\", \"null\", \"null\"]],\n            checkboxes: new Array(n).fill().map((_, i) => !i),\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBuildTable = this.handleBuildTable.bind(this);\n    }\n\n    onChange(e, changedIndex) {\n        // it is a good habit to extract things from event variable\n        const { checked } = e.target;\n\n        this.setState(state => ({\n            // this lets you unselect all.\n            // but selected can be anly one at a time\n            checkboxes: state.checkboxes.map((_, i) => i === changedIndex ? checked : false),\n        }));\n    }\n\n    handleOnDrop = (data) => {\n        this.setState(state => ({\n            householdData: data\n        }));\n    };\n\n    handleOnError = (err, file, inputElem, reason) => {\n        alert(err);\n    };\n\n\n    handleBuildTable() {\n\n        const data = this.state.householdData;\n        let head = data[0];\n        let [, ...body] = data;\n\n        console.log(body);\n        let arr = [];\n\n        for (let i = 0; i < 10 && i < body.length - 1; i++) {\n            console.log(body[i]);\n            arr.push(body[i].data);\n        }\n\n        this.setState(state => ({\n            headerItems: head.data,\n            headerData: arr,\n        }));\n\n\n    }\n\n\n    handleSubmit(event) {\n        const data = this.state.householdData;\n        \n        if (!this.state.householdData) {\n            alert(\"Please add a data set\");\n        } else {\n            let [, ...body] = data;\n            let arr = { data: [], table: \"\"};\n            body.forEach(function(item) {\n                console.log(item.data);\n                if(item.data.length !== 0 && !(item.data.length == 1 && item.data[0] == \"\")){\n                    item.data.forEach(function (element, index, array) {\n                        array[index] = array[index].trim();\n                    });\n                    arr.data.push(item);\n                }\n            })\n\n            // const csv = jsonToCSV({\n            //     \"fields\": data[0].data,\n            //     \"data\": myarr\n            // });\n            if (this.state.checkboxes[0] == true) {\n                this.handleBuildTable();\n                arr.table = \"households\";\n                this.props.dispatch(postHouseholds(arr));\n\n            } else if (this.state.checkboxes[1] == true) {\n                this.handleBuildTable();\n                arr.table = \"products\";\n                this.props.dispatch(postHouseholds(arr));\n\n            } else {\n                this.handleBuildTable();\n                arr.table = \"transactions\";\n                this.props.dispatch(postHouseholds(arr));\n            }\n        }\n\n    }\n\n\n    render() {\n        const { checkboxes } = this.state;\n        let herror = this.props.herror;\n        let hloading = this.props.hloading;\n        let hdata = this.props.hdata;\n        console.log(this.props);\n        if (hloading) {\n        }\n        if (herror) {\n            alert(\"There was an error while uploading your data. You may have duplicates in your data.\");\n        }\n        if (hdata.length !== 0) {\n            alert(\"Data uploaded successfully\");\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <h2>Import New Data</h2>\n                    <p>Please input one file at a time and select destination. The data uploaded will populate after submitting the file. Do not enter data with ids that are already present in the database. </p>\n                    <CSVReader\n                        onDrop={this.handleOnDrop}\n                        onError={this.handleOnError}\n                        addRemoveButton>\n                        <span>Drop CSV file here or click to upload.</span>\n                    </CSVReader>\n                    <form onSubmit={this.handleSubmit} className=\"mt-5\">\n                        <div className=\"col-4\"></div>\n                        <div className=\"col-4\">\n                            <div className=\"d-flex flex-column align-items-start\">\n                                {checkboxes.map((item, i) => (\n                                    <label className=\"d-flex flex-row justify-content-between align-items-center\">\n                                        <input\n                                            key={i}\n                                            type=\"checkbox\"\n                                            checked={item}\n                                            onChange={e => this.onChange(e, i) /* notice passing an index. we will use it */}\n                                        />  {mylabel[i]}\n                                    </label>\n                                ))}\n                            </div>\n                            <input className=\"btn btn-primary btn-block mt-3\" type=\"submit\" value=\"Submit\" />\n                        </div>\n                        <div className=\"col-4\"></div>\n                    </form>\n                    <table className=\"table table-striped mt-3\">\n                        <thead className=\"table-light\">\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                {this.state.headerItems.map((item) => {\n                                    return (\n                                        <th scope=\"col\">{item}</th>\n                                    );\n                                })}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.headerData.map((row, index) => {\n                                return (\n                                    <tr>\n                                        <th scope=\"row\">{index + 1}</th>\n                                        {\n                                            row.map((item) => {\n                                                return (\n                                                    <td>{item}</td>\n                                                );\n                                            })\n                                        }\n                                    </tr>\n                                );\n                            })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    hdata: state.upload.items,\n    hloading: state.upload.loading,\n    herror: state.upload.error,\n});\n\nexport default connect(mapStateToProps)(ImportData);","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","\nimport http from '../http-common';\n\nconst API_URL = 'http://localhost:8080/api/';\n\nclass OneAService {\n\n  getOneA(hshd_num){\n    return http.get(API_URL + 'onea/' + hshd_num);\n  }\n\n}\n\nexport default new OneAService();","import OneAService from \"../services/onea.service\";\n\nimport {\n    RETRIEVE_ONEA_BEGIN, \n    RETRIEVE_ONEA_SUCCESS, \n    RETRIEVE_ONEA_FAIL\n} from \"./types\";\n\nexport const fetchOneA = (hshd_num) => (dispatch) => {\n    dispatch(retrieveOneABegin());\n    return OneAService.getOneA(hshd_num).then(\n        (data) => {\n            dispatch(retrieveOneASuccess(data));\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch(retrieveOneAFail(error));\n            return Promise.reject();\n        }\n    );\n};\n\nexport const retrieveOneABegin = () => ({\n    type: RETRIEVE_ONEA_BEGIN,\n});\n\nexport const retrieveOneASuccess = onea => ({\n    type: RETRIEVE_ONEA_SUCCESS,\n    payload: onea\n});\n\nexport const retrieveOneAFail = error => ({\n    type: RETRIEVE_ONEA_FAIL,\n    payload: error \n});","\nimport http from '../http-common';\n\nconst API_URL = 'http://localhost:8080/api/';\n\nclass OneAService {\n\n  getHshdNums(){\n    return http.get(API_URL + 'hshd_nums');\n  }\n\n}\n\nexport default new OneAService();","import HshdNumsService from \"../services/hshdnums.service\";\n\nimport {\n    RETRIEVE_HSHDS_BEGIN, \n    RETRIEVE_HSHDS_SUCCESS, \n    RETRIEVE_HSHDS_FAIL\n} from \"./types\";\n\nexport const fetchHshdNums = () => (dispatch) => {\n    dispatch(retrieveHshdNumsBegin());\n    return HshdNumsService.getHshdNums().then(\n        (data) => {\n            dispatch(retrieveHshdNumsSuccess(data));\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch(retrieveHshdNumsFail(error));\n            return Promise.reject();\n        }\n    );\n};\n\nexport const retrieveHshdNumsBegin = () => ({\n    type: RETRIEVE_HSHDS_BEGIN,\n});\n\nexport const retrieveHshdNumsSuccess = hshd => ({\n    type: RETRIEVE_HSHDS_SUCCESS,\n    payload: hshd\n});\n\nexport const retrieveHshdNumsFail = error => ({\n    type: RETRIEVE_HSHDS_FAIL,\n    payload: error \n});","import React,  { Component } from 'react';\nimport { fetchHshdNums } from \"../actions/hshdnums\";\nimport { connect } from \"react-redux\";\n\n\nclass DropDown extends Component {\n\n\n\n    componentDidMount(){\n        this.props.dispatch(fetchHshdNums());\n    }\n\n    onTrigger = (event) => {\n        console.log(event);\n        this.props.onSelectHousehold(event.target.value);\n        event.preventDefault();\n    }\n\n    render(){\n        let hshdserror = this.props.hshdserror;\n        let hshdsloading = this.props.hshdsloading;\n        let hshds = this.props.hshds;\n        let arr = [];\n\n        if (hshdsloading) {\n            return [\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <div className=\"spinner-border\" role=\"status\"></div>\n                    </div>\n                </div>\n            ]\n        }\n        if (hshdserror) {\n            return [\n            <div className=\"container\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <div>Error! {hshdserror.message}</div>\n                </div>\n            </div>\n            ]\n        } \n        if (hshds) {\n            arr = hshds.data[0].map(function (el) {\n                return el.btrim;\n            });\n            console.log(arr);\n        }\n        return <div className=\"drop-down\">\n            <label for=\"households\">Choose a household:</label>\n            <select name=\"households\" onChange={this.onTrigger}>\n                {arr.map((option, key) => <option key={key}>{option}</option>)}\n            </select>\n            </div>;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    hshds: state.hshd.items,\n    hshdsloading: state.hshd.loading,\n    hshdserror: state.hshd.error,\n});\n\nexport default connect(mapStateToProps)(DropDown);","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\n\nclass LineGraph extends Component {\n\n    render() {\n        return (\n            <div>\n                <Line\n                    height={600} width={1000}\n                    data={\n                        {\n                            labels: this.props.labels,\n                            datasets: [\n                                {\n                                    label: false,\n                                    fill: false,\n                                    lineTension: 0.5,\n                                    backgroundColor: 'rgba(75,192,192,1)',\n                                    borderColor: 'rgba(0,0,0,1)',\n                                    borderWidth: 2,\n                                    data: this.props.data\n                                }\n                            ]\n                        }\n                    }\n                    options={{\n                        plugins: {\n                            legend: {\n                                display: false,\n                            },\n                            title: {\n                                display: true,\n                                text: this.props.title,\n                                font: {\n                                    size: 30,\n                                }\n                            }\n                        },\n\n                        scales: {\n                            y: {\n                                title: {\n                                    display: true,\n                                    text: this.props.yaxis,\n                                    font: {\n                                        size: 25,\n                                    }\n                                }\n                            },\n                            x: {\n                                title: {\n                                    display: true,\n                                    text: this.props.xaxis,\n                                    font: {\n                                        size: 25,\n                                    }\n                                }\n                            }\n                        }\n                    }} />\n            </div>\n        );\n    }\n}\n\nexport default LineGraph;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOneA } from \"../actions/onea\";\nimport DropDown from \"./dropdown.component\";\nimport LineGraph from \"./line-graph.component\";\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass OneA extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data: \"0010\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchOneA(\"0010\"));\n    }\n\n\n    fetchHousehold = (childData) => {\n        this.setState({data: childData});\n        this.props.dispatch(fetchOneA(childData));\n    }\n\n    render() {\n        console.log(this.props);\n        let currentUser = this.props.user;\n        if (!currentUser) {\n          return <Redirect to=\"/login\" />;\n        }\n        let oneaerror = this.props.oneaerror;\n        let onealoading = this.props.onealoading;\n        let onea = this.props.onea;\n        let labels = [];\n        let values = [];\n        let title = \"Cusomter Engagement for Household: 0010\";\n        if (onealoading) {\n            return [\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <div className=\"spinner-border\" role=\"status\"></div>\n                    </div>\n                </div>\n            ]\n        }\n        if (oneaerror) {\n            return [\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <div>Error! {oneaerror.message}</div>\n                    </div>\n                </div>\n            ]\n        } \n        console.log(onea.data);\n        if(onea.data[0].length !== 0){\n            let data = onea.data[0];\n            console.log(data);\n            title = \"Cusomter Engagement for Household: \" + data[0].hshd_num;\n            for(let i = 0; i < data.length; i++){\n                console.log(data[i].weekly_spending);\n                labels.push(data[i].purchase_week);\n                values.push(data[i].weekly_spending);\n            }\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <h2>One A</h2>\n                    <h4>Customer Engagement Over Time</h4>\n                    <DropDown onSelectHousehold={this.fetchHousehold} />\n                    <LineGraph labels={labels} data={values} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Transaction Date and Time\" title={title}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.isLoggedIn,\n    onea: state.onea.items,\n    onealoading: state.onea.loading,\n    oneaerror: state.onea.error,\n});\n\nexport default connect(mapStateToProps)(OneA);","\nimport http from '../http-common';\n\nconst API_URL = 'http://localhost:8080/api/';\n\nclass TwoAService {\n\n  getTwoA(){\n    return http.get(API_URL + 'twoa/');\n  }\n\n}\n\nexport default new TwoAService();","import TwoAService from \"../services/TwoA.service\";\n\nimport {\n    RETRIEVE_TWOA_BEGIN, \n    RETRIEVE_TWOA_SUCCESS, \n    RETRIEVE_TWOA_FAIL\n} from \"./types\";\n\nexport const fetchTwoA = (hshd_num) => (dispatch) => {\n    dispatch(retrieveTwoABegin());\n    return TwoAService.getTwoA(hshd_num).then(\n        (data) => {\n            dispatch(retrieveTwoASuccess(data));\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch(retrieveTwoAFail(error));\n            return Promise.reject();\n        }\n    );\n};\n\nexport const retrieveTwoABegin = () => ({\n    type: RETRIEVE_TWOA_BEGIN,\n});\n\nexport const retrieveTwoASuccess = TwoA => ({\n    type: RETRIEVE_TWOA_SUCCESS,\n    payload: TwoA\n});\n\nexport const retrieveTwoAFail = error => ({\n    type: RETRIEVE_TWOA_FAIL,\n    payload: error \n});","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nclass BarChart extends Component {\n\n    render() {\n        return (\n            <div>\n                <Bar\n                    height={600} width={1000}\n                    data={\n                        {\n                            labels: this.props.labels,\n                            datasets: [\n                                {\n                                    label: false,\n                                    backgroundColor: 'rgba(75,192,192,1)',\n                                    borderColor: 'rgba(0,0,0,1)',\n                                    borderWidth: 2,\n                                    data: this.props.data\n                                }\n                            ]\n                        }\n                    }\n                    options={{\n                        plugins: {\n                            legend: {\n                                display: false,\n                            },\n                            title: {\n                                display: true,\n                                text: this.props.title,\n                                font: {\n                                    size: 30,\n                                }\n                            }\n                        },\n\n                        scales: {\n                            y: {\n                                title: {\n                                    display: true,\n                                    text: this.props.yaxis,\n                                    font: {\n                                        size: 25,\n                                    }\n                                }\n                            },\n                            x: {\n                                title: {\n                                    display: true,\n                                    text: this.props.xaxis,\n                                    font: {\n                                        size: 25,\n                                    }\n                                }\n                            }\n                        }\n                    }} />\n            </div>\n        );\n    }\n}\n\nexport default BarChart;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTwoA } from \"../actions/twoa\";\nimport BarChart from \"./bar-chart.component\";\n\nclass OneB extends Component {\n\n\n    getById(obj, property, name){\n        let i;\n        let j = 0;\n        let array = [];\n        let validMonths = [\"8\",\"9\",\"10\",\"11\",\"12\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\n        if(name){\n            for(i = 0; i < obj.length; i++){\n                if(String(obj[i][\"commodity\"]) == name){\n                    if(obj[i][\"month/year\"].startsWith(validMonths[j])){\n                        array.push(obj[i][property]);\n                    } else{\n                        array.push(0);\n                        array.push(obj[i][property]);\n\n                        j = j + 1;\n                    }\n                    j = j + 1;\n                }\n            }\n        } else {\n            for(i = 0; i < obj.length; i++){\n                array.push(obj[i][property]);\n            }\n        }\n        return array;\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchTwoA());\n    }\n\n    render() {\n        let twoaerror = this.props.twoaerror;\n        let twoaloading = this.props.twoaloading;\n        let twoa = this.props.twoa;\n        let labels = [];\n        let values = [];\n        console.log(twoa);\n        if (twoaloading) {\n            return [\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <div className=\"spinner-border\" role=\"status\"></div>\n                    </div>\n                </div>\n            ]\n        }\n        if (twoaerror) {\n            return [\n            <div className=\"container\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <div>Error! {twoaerror.message}</div>\n                </div>\n            </div>\n            ]\n        } \n        if (twoa) {\n            labels = twoa.data[0].map(function (el) {\n                return el.category;\n            });\n\n            values = twoa.data[0].map(function (el) {\n                return el.average_household_spending;\n            });\n            console.log(labels);\n            console.log(values);\n        }\n            return (\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <h2>Two A</h2>\n                        <h4> How do demographic factors affect customer engagement within certain categories?</h4>\n                        <BarChart labels={labels} data={values} yaxis=\"Average Household Spending in USD\" xaxis=\"Category\" title=\"Demographic Factors Affecting Customer Engagement\"/>\n                    </div>\n                </div>\n            );\n        \n    }\n}\n\nconst mapStateToProps = (state) => ({\n    twoa: state.twoa.items,\n    twoaloading: state.twoa.loading,\n    twoaerror: state.twoa.error\n});\n\nexport default connect(mapStateToProps)(OneB);","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","\nimport http from '../http-common';\n\nconst API_URL = 'http://localhost:8080/api/';\n\nclass CategoryService {\n\n  getAllCategories(){\n    return http.get(API_URL + 'categories');\n  }\n\n}\n\nexport default new CategoryService();","import CategoryService from \"../services/category.service\";\n\nimport {\n    RETRIEVE_CATEGORIES_BEGIN, \n    RETRIEVE_CATEGORIES_SUCCESS, \n    RETRIEVE_CATEGORIES_FAIL\n} from \"./types\";\n\nexport const fetchCategories = () => (dispatch) => {\n    dispatch(retrieveCategoriesBegin());\n    return CategoryService.getAllCategories().then(\n        (data) => {\n            dispatch(retrieveCategoriesSuccess(data));\n            return Promise.resolve();\n        },\n        (error) => {\n            dispatch(retrieveCategoriesFail(error));\n            return Promise.reject();\n        }\n    );\n};\n\nexport const retrieveCategoriesBegin = () => ({\n    type: RETRIEVE_CATEGORIES_BEGIN,\n});\n\nexport const retrieveCategoriesSuccess = categories => ({\n    type: RETRIEVE_CATEGORIES_SUCCESS,\n    payload: categories\n});\n\nexport const retrieveCategoriesFail = error => ({\n    type: RETRIEVE_CATEGORIES_FAIL,\n    payload: error \n});","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCategories } from \"../actions/categories\";\nimport LineGraph from \"./line-graph.component\";\n\nclass OneB extends Component {\n\n\n    getById(obj, property, name){\n        let i;\n        let j = 0;\n        let array = [];\n        let validMonths = [\"8\",\"9\",\"10\",\"11\",\"12\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\n        if(name){\n            for(i = 0; i < obj.length; i++){\n                if(String(obj[i][\"commodity\"]) == name){\n                    if(obj[i][\"month/year\"].startsWith(validMonths[j])){\n                        array.push(obj[i][property]);\n                    } else{\n                        array.push(0);\n                        array.push(obj[i][property]);\n\n                        j = j + 1;\n                    }\n                    j = j + 1;\n                }\n            }\n        } else {\n            for(i = 0; i < obj.length; i++){\n                array.push(obj[i][property]);\n            }\n        }\n        return array;\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchCategories());\n    }\n\n    render() {\n        let cerror = this.props.cerror;\n        let cloading = this.props.cloading;\n        let categories = this.props.categories;\n        if (cloading) {\n            return [\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <div className=\"spinner-border\" role=\"status\"></div>\n                    </div>\n                </div>\n            ]\n        }\n        if (cerror) {\n            return [\n            <div className=\"container\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <div>Error! {cerror.message}</div>\n                </div>\n            </div>\n            ]\n        } \n            return (\n                <div className=\"container\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <h2>One B</h2>\n                        <h4>Changing Customer Engagement By Category Over Time</h4>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"ACTIVITY\")} data={this.getById(categories.data[0], \"sum\", \"ACTIVITY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Activity Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"ALCOHOL\")} data={this.getById(categories.data[0], \"sum\", \"ALCOHOL\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Alcohol Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"AUTO\")} data={this.getById(categories.data[0], \"sum\", \"AUTO\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Auto Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"BABY\")} data={this.getById(categories.data[0], \"sum\", \"BABY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Baby Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"BAKERY\")} data={this.getById(categories.data[0], \"sum\", \"BAKERY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Bakery Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"BEVERAGE - NON WATER\")} data={this.getById(categories.data[0], \"sum\", \"BEVERAGE - NON WATER\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Beverage - Non Water Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"BEVERAGE - WATER\")} data={this.getById(categories.data[0], \"sum\", \"BEVERAGE - WATER\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Beverage - Water Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"BULK PRODUCTS\")} data={this.getById(categories.data[0], \"sum\", \"BULK PRODUCTS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Bulk Products Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"CANNED GOODS\")} data={this.getById(categories.data[0], \"sum\", \"CANNED GOODS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Canned Goods Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"CLOTHING\")} data={this.getById(categories.data[0], \"sum\", \"CLOTHING\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Clothing Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"COSMETICS\")} data={this.getById(categories.data[0], \"sum\", \"COSMETICS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Cosmetics Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"DAIRY\")} data={this.getById(categories.data[0], \"sum\", \"DAIRY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Dairy Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"DELI\")} data={this.getById(categories.data[0], \"sum\", \"DELI\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Deli Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"DRY GOODS\")} data={this.getById(categories.data[0], \"sum\", \"DRY GOODS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Dry Goods Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"ELECTRONICS\")} data={this.getById(categories.data[0], \"sum\", \"ELECTRONICS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Electronics Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"FLORAL\")} data={this.getById(categories.data[0], \"sum\", \"FLORAL\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Floral Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"FROZEN FOOD\")} data={this.getById(categories.data[0], \"sum\", \"FROZEN FOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Frozen Food Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"GIFT\")} data={this.getById(categories.data[0], \"sum\", \"GIFT\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Gift Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"GROCERY STAPLE\")} data={this.getById(categories.data[0], \"sum\", \"GROCERY STAPLE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Grocery Staple Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"HOLIDAY\")} data={this.getById(categories.data[0], \"sum\", \"HOLIDAY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Holiday Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"HOUSEHOLD\")} data={this.getById(categories.data[0], \"sum\", \"HOUSEHOLD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Household Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"IN STORE FOOD SERVICE\")} data={this.getById(categories.data[0], \"sum\", \"IN STORE FOOD SERVICE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of In Store Food Service Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"INTERNATIONAL FOOD\")} data={this.getById(categories.data[0], \"sum\", \"INTERNATIONAL FOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of International Food Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - BEEF\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - BEEF\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Beef Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - CHICKEN\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - CHICKEN\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Chicken Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - OTHER\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - OTHER\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Other Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - PORK\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - PORK\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat - Pork Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - POULTRY\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - POULTRY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat Poultry Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - SAUSAGE\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - SAUSAGE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat Sausage Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEAT - TURKEY\")} data={this.getById(categories.data[0], \"sum\", \"MEAT - TURKEY\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Meat Turkey Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEDICAL SUPPLIES\")} data={this.getById(categories.data[0], \"sum\", \"MEDICAL SUPPLIES\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Medical Supplies Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MEDICATION\")} data={this.getById(categories.data[0], \"sum\", \"MEDICATION\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Medication Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"MISC\")} data={this.getById(categories.data[0], \"sum\", \"MISC\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Miscellaneous Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"OUTDOOR\")} data={this.getById(categories.data[0], \"sum\", \"OUTDOOR\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Outdoor Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"PERSONAL CARE\")} data={this.getById(categories.data[0], \"sum\", \"PERSONAL CARE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Personal Care Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"PET\")} data={this.getById(categories.data[0], \"sum\", \"PET\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Pet Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"PRODUCE\")} data={this.getById(categories.data[0], \"sum\", \"PRODUCE\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Produce Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"SEAFOOD\")} data={this.getById(categories.data[0], \"sum\", \"SEAFOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Seafood Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"SEASONAL PRODUCTS\")} data={this.getById(categories.data[0], \"sum\", \"SEASONAL PRODUCTS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Seasonal Products Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"SPECIALTY FOOD\")} data={this.getById(categories.data[0], \"sum\", \"SPECIALTY FOOD\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Specialty Food Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"TOBACCO PRODUCTS\")} data={this.getById(categories.data[0], \"sum\", \"TOBACCO PRODUCTS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Tobacco Products Commodity\"/>\n                        <LineGraph labels={this.getById(categories.data[0], \"month/year\", \"TOYS\")} data={this.getById(categories.data[0], \"sum\", \"TOYS\")} yaxis=\"Total Amount Spent in US Dollars\" xaxis=\"Month and Year\" title=\"Sum of Toys Commodity\"/>\n                    </div>\n                </div>\n            );\n        \n    }\n}\n\nconst mapStateToProps = (state) => ({\n    categories: state.category.items,\n    cloading: state.category.loading,\n    cerror: state.category.error\n});\n\nexport default connect(mapStateToProps)(OneB);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Profile from \"./components/profile.component\";\nimport ImportData from \"./components/import-data.component\";\nimport EventBus from \"./common/EventBus\";\nimport AuthService from \"./services/auth.service\";\nimport OneA from \"./components/onea.component\"\nimport TwoA from \"./components/twoa.component\"\n\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from './helpers/history';\nimport OneB from \"./components/oneb.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n    \n    EventBus.on(\"logout\", () => {\n      this.logOut();\n    });\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\");\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      currentUser: undefined,\n    });\n    window.location.reload();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand myTestClass\">\n              AzureAcrobats\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n            </div>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    Account\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/onea\"} className=\"nav-link\">\n                    Question 1A/Dashboard\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/oneb\"} className=\"nav-link\">\n                    Question 1B\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/twoa\"} className=\"nav-link\">\n                    Question 2A\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/import\"} className=\"nav-link\">\n                    Import Data\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\n                    Log Out\n                  </Link>\n                </li>\n              </div>\n            ) : (\n              <div>\n                \n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={\"/\", \"/login\"} component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/import\" component={ImportData} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/onea\" component={OneA} />\n              <Route exact path=\"/oneb\" component={OneB} />\n              <Route exact path=\"/twoa\" component={TwoA} />\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  const { household } = state.household;\n  const { onea } = state.onea;\n  const { category } = state.category;\n  const { hshd } = state.hshd;\n  const { twoa } = state.twoa;\n  const { upload } = state.upload;\n  return {\n    user,\n    household,\n    onea,\n    category,\n    hshd,\n    twoa,\n    upload\n  };\n}\n\nexport default connect(mapStateToProps)(App);","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { HashRouter } from \"react-router-dom\";\n\n\nimport App from \"./App\";\n\n\nwindow.addEventListener(\"load\", () =>\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n);\n"],"sourceRoot":""}